Directory structure:
└── isaactakamura-participanuevochim2/
    ├── README.md
    ├── bdScript
    ├── composer.json
    ├── composer.lock
    ├── enviar.php
    ├── estructura
    ├── index.php
    ├── report.php
    ├── upload_image.php
    ├── ImgSubidas/
    ├── confirmacion/
    │   └── confirmacion.php
    ├── css/
    │   ├── CVVDF.css
    │   ├── cartas_index.css
    │   ├── confirmacion.css
    │   ├── contenedorNoticia.css
    │   └── index.css
    ├── data/
    │   └── db_connection.php
    ├── forms/
    │   ├── BASURA/
    │   │   ├── basura.php
    │   │   ├── estilo.css
    │   │   ├── process_report_basura.php
    │   │   ├── send_email.php
    │   │   └── ubicacion.js
    │   ├── alumbrado/
    │   │   ├── alumbrado.php
    │   │   ├── esti.css
    │   │   ├── ga.js
    │   │   ├── process_report_alumbrado.php
    │   │   ├── send_email.php
    │   │   └── ubicacion.js
    │   ├── baches/
    │   │   ├── baches.php
    │   │   ├── estilo.css
    │   │   ├── ga.js
    │   │   ├── process_report_baches.php
    │   │   ├── send_email.php
    │   │   └── ubicacion.js
    │   └── espaciosPublicos/
    │       ├── espacio.php
    │       ├── esti.css
    │       ├── ga.js
    │       ├── process_report_espacio.php
    │       ├── send_email.php
    │       └── ubicacion.js
    ├── images/
    ├── incluides/
    │   ├── footer.php
    │   └── header.php
    ├── js/
    │   ├── confirmacion.js
    │   └── scripts.js
    ├── pruebas/
    │   ├── espacio.php
    │   ├── ga.js
    │   ├── process_report_espacio.php
    │   ├── send_email.php
    │   └── ubicacion.js
    ├── templates/
    │   ├── CVVDF.php
    │   └── home.php
    └── vendor/
        ├── autoload.php
        ├── composer/
        │   ├── ClassLoader.php
        │   ├── InstalledVersions.php
        │   ├── LICENSE
        │   ├── autoload_classmap.php
        │   ├── autoload_namespaces.php
        │   ├── autoload_psr4.php
        │   ├── autoload_real.php
        │   ├── autoload_static.php
        │   ├── installed.json
        │   ├── installed.php
        │   └── platform_check.php
        └── phpmailer/
            └── phpmailer/

================================================
File: README.md
================================================
# ParticipaNuevoChimbotano


================================================
File: bdScript
================================================
-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Servidor: 127.0.0.1
-- Tiempo de generación: 10-02-2025 a las 16:49:28
-- Versión del servidor: 10.4.32-MariaDB
-- Versión de PHP: 8.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de datos: `yoopinoneochimb`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `categorias`
--

CREATE TABLE `categorias` (
  `idCategorias` int(11) NOT NULL,
  `nombre` varchar(40) NOT NULL,
  `descripcion` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `categorias`
--

INSERT INTO `categorias` (`idCategorias`, `nombre`, `descripcion`) VALUES
(1, 'Alumbrado Público', 'Reportes relacionados con problemas de iluminación pública.'),
(2, 'Espacio Público', 'Reportes sobre el uso y mantenimiento del espacio público.'),
(3, 'Basuras', 'Reportes sobre problemas de recolección de basura.'),
(4, 'Hueco', 'Reportes sobre baches o huecos en las vías.'),
(5, 'Conductores Transmilenio', 'Reportes relacionados con el comportamiento de conductores.');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `detalles_reporte`
--

CREATE TABLE `detalles_reporte` (
  `idDetallesReporte` int(11) NOT NULL,
  `reporte_id` int(11) NOT NULL,
  `atributo` varchar(255) NOT NULL,
  `valor` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `detalles_reporte`
--

INSERT INTO `detalles_reporte` (`idDetallesReporte`, `reporte_id`, `atributo`, `valor`) VALUES
(1, 1, 'Vía de transporte público', 'Sí'),
(2, 1, 'Cantidad de tráfico', 'Alto'),
(3, 1, 'Tiempo de aparición', '2 semanas'),
(4, 2, 'Vía de transporte público', 'Sí'),
(5, 2, 'Cantidad de tráfico', '0'),
(6, 2, 'Tiempo de aparición', '1 a 2 años'),
(7, 3, 'Vía de transporte público', 'Sí'),
(8, 3, 'Cantidad de tráfico', '0'),
(9, 3, 'Tiempo de aparición', 'más de 2 años'),
(10, 4, 'Vía de transporte público', ''),
(11, 4, 'Cantidad de tráfico', ''),
(12, 4, 'Tiempo de aparición', ''),
(13, 5, 'Causa', 'Ausencia de alumbrado'),
(14, 5, 'Espacio afectado', '0'),
(15, 5, 'Tiempo de afectación', '2 a 4 semanas');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `reportes`
--

CREATE TABLE `reportes` (
  `idReporte` int(11) NOT NULL,
  `usuario_id` int(11) DEFAULT NULL,
  `categoria_id` int(11) DEFAULT NULL,
  `descripcion` varchar(255) NOT NULL,
  `fecha_reporte` timestamp NOT NULL DEFAULT current_timestamp(),
  `Direccion` varchar(255) DEFAULT NULL,
  `estado` varchar(20) DEFAULT 'Pendiente',
  `foto_url` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `reportes`
--

INSERT INTO `reportes` (`idReporte`, `usuario_id`, `categoria_id`, `descripcion`, `fecha_reporte`, `Direccion`, `estado`, `foto_url`) VALUES
(1, 1, 4, 'Hueco grande en la calle principal.', '2025-01-19 03:32:05', 'Calle 456, Ciudad', 'Pendiente', NULL),
(2, 2, 4, 'un hueco que tiene mucho tiempo', '2025-01-22 05:04:46', 'bruces G', 'Pendiente', 'ImgSubidas/Escudo_de_Nuevo_Chimbote.png'),
(3, 3, 4, 'Hueco o Bache que tiene bastante tiempo', '2025-01-22 05:44:06', 'Ovalo de la Familia', 'Pendiente', 'ImgSubidas/logo_white.png'),
(4, 4, 3, 'En el parque se llevo el evento de emprendedores y quedo basura', '2025-01-24 16:57:02', 'Parque del amor y la amistad', 'Pendiente', 'ImgSubidas/basura2.png'),
(5, 5, 1, 'En mi barrio no light ', '2025-01-24 17:03:23', 'San Luis', 'Pendiente', 'ImgSubidas/PLaza Mayor Nuevo Chimbote1.jpg'),
(6, 6, 1, 'prueba', '2025-02-05 17:34:27', 'Complejo Polideportivo de Bruces, Avenida Central, Nuevo Chimbote, Santa, Áncash, 02711, Perú', 'Pendiente', NULL),
(7, 9, 1, 'preuba2', '2025-02-05 17:47:39', '', 'Pendiente', NULL),
(8, 4, 1, 'prueba3', '2025-02-05 17:49:02', '', 'Pendiente', NULL),
(9, 11, 1, 'tengo problemas con mi luz', '2025-02-07 13:45:48', '', 'Pendiente', NULL),
(10, 11, 1, 'prueba 3', '2025-02-07 14:03:12', '', 'Pendiente', NULL),
(15, 11751245, 1, 'prueba5', '2025-02-07 17:19:42', 'Polideportivo Casuarinas, Pasaje Los Cipreces, Buenos Aires, Nuevo Chimbote, Santa, Áncash, 02710, Perú', 'Pendiente', NULL),
(16, 11751245, 1, 'prueba5', '2025-02-07 17:29:41', 'Polideportivo Casuarinas, Pasaje Los Cipreces, Buenos Aires, Nuevo Chimbote, Santa, Áncash, 02710, Perú', 'Pendiente', NULL),
(17, 11751245, 1, 'prueba 4', '2025-02-07 17:30:39', 'Polideportivo Casuarinas, Jirón Los Cactus, Buenos Aires, Nuevo Chimbote, Santa, Áncash, 02710, Perú', 'Pendiente', NULL),
(18, 70718596, 1, 'Una farola que se encuentra del lado de las farmacias, cerca de un acuario se encuentra dañada, esta que parpadea desde hace rato', '2025-02-07 17:50:22', 'Óvalo La Sagrada Familia, Nuevo Chimbote, Santa, Áncash, 02711, Perú', 'Pendiente', NULL),
(19, 70718596, 1, 'Una farola que se encuentra del lado de las farmacias, cerca de un acuario se encuentra dañada, esta que parpadea desde hace rato', '2025-02-07 18:02:20', 'Avenida Sagrada Familia, Nuevo Chimbote, Santa, Áncash, 02711, Perú', 'Pendiente', NULL),
(20, 70718596, 1, 'prueba 6', '2025-02-10 01:25:08', 'Avenida Sagrada Familia, Nuevo Chimbote, Santa, Áncash, 02711, Perú', 'Pendiente', NULL),
(21, 99999999, 1, 'prueba 7', '2025-02-10 15:44:33', 'Fami Salud, Avenida Jorge Basadre Oeste, Santa Elizabeth (I etapa), San Juan de Lurigancho, Lima, Lima Metropolitana, Lima, 15419, Perú', 'Pendiente', NULL),
(22, 99999999, 4, 'prueba baches 1', '2025-02-10 15:46:09', 'Fami Salud, Avenida Jorge Basadre Oeste, Santa Elizabeth (I etapa), San Juan de Lurigancho, Lima, Lima Metropolitana, Lima, 15419, Perú', 'Pendiente', '../../ImgSubidas/bache.jpg');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `usuario`
--

CREATE TABLE `usuario` (
  `idUsuario` int(11) NOT NULL,
  `TipoIdentificacion` int(11) DEFAULT NULL,
  `Nombres` varchar(100) NOT NULL,
  `Apellidos` varchar(100) NOT NULL,
  `Telefono` int(9) DEFAULT NULL,
  `Direccion` varchar(255) DEFAULT NULL,
  `Correo` varchar(255) NOT NULL,
  `Fecha_registro` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `usuario`
--

INSERT INTO `usuario` (`idUsuario`, `TipoIdentificacion`, `Nombres`, `Apellidos`, `Telefono`, `Direccion`, `Correo`, `Fecha_registro`) VALUES
(1, 1, 'Juan', 'Perez', 123456789, 'Calle 123, Ciudad', 'juan.perez@example.com', '2025-01-19 03:32:05'),
(2, 1, 'Isaac Takamura', 'Takamura Rojas', 942029405, 'bruces G', 'isaactakamura@gmail.com', '2025-01-22 05:04:46'),
(3, 1, 'Isaac', 'Prueba', 942029404, 'Ovalo de la Familia', 'pabloft@gmail.com', '2025-01-22 05:44:06'),
(4, 1, 'Isaac Ivanov', 'Takamura Rojas', 942029405, 'Parque del amor y la amistad', 'isaactakamura107@gmail.com', '2025-01-24 16:57:02'),
(5, 1, 'Francisco Jesus', 'Cordova Natividad', 960523757, 'San Luis', 'pabloftandwillian@gmail.com', '2025-01-24 17:03:23'),
(6, 1, 'Nicolas', 'Dick', 942029555, 'Avenida Sagrada Familia, Nuevo Chimbote, Santa, Áncash, 02711, Perú', 'takamuraisaac@gmail.com', '2025-02-05 17:34:27'),
(9, NULL, 'Nicolas 2', 'Prueba 2', 0, '', 'nicolas2@gmail.com', '2025-02-05 17:47:39'),
(11, 0, 'Rick Jason', 'Fernandez Torres', 999029555, 'Polideportivo Casuarinas, Avenida Las Palmeras, Buenos Aires, Nuevo Chimbote, Santa, Áncash, 02710, Perú', 'Rickjason2975@gmail.com', '2025-02-07 13:45:48'),
(11751245, 1, 'Nicolas Isma', 'Alayo Arias', 955029555, 'Polideportivo Casuarinas, Jirón Los Cactus, Buenos Aires, Nuevo Chimbote, Santa, Áncash, 02710, Perú', 'NicolasIsma@gmail.com', '2025-02-07 17:19:42'),
(70718596, 1, 'Victor Andree', 'Sevillano Vega', 946330198, 'Avenida Sagrada Familia, Nuevo Chimbote, Santa, Áncash, 02711, Perú', 'tengoChamba21@gmail.com', '2025-02-07 17:50:22'),
(99999999, 1, '999', '999', 999999999, 'Fami Salud, Avenida Jorge Basadre Oeste, Santa Elizabeth (I etapa), San Juan de Lurigancho, Lima, Lima Metropolitana, Lima, 15419, Perú', '999@gmail.com', '2025-02-10 15:44:33');

--
-- Índices para tablas volcadas
--

--
-- Indices de la tabla `categorias`
--
ALTER TABLE `categorias`
  ADD PRIMARY KEY (`idCategorias`),
  ADD UNIQUE KEY `nombre` (`nombre`);

--
-- Indices de la tabla `detalles_reporte`
--
ALTER TABLE `detalles_reporte`
  ADD PRIMARY KEY (`idDetallesReporte`),
  ADD KEY `reporte_id` (`reporte_id`);

--
-- Indices de la tabla `reportes`
--
ALTER TABLE `reportes`
  ADD PRIMARY KEY (`idReporte`),
  ADD KEY `categoria_id` (`categoria_id`),
  ADD KEY `reportes_ibfk_1` (`usuario_id`);

--
-- Indices de la tabla `usuario`
--
ALTER TABLE `usuario`
  ADD PRIMARY KEY (`idUsuario`),
  ADD UNIQUE KEY `Correo` (`Correo`);

--
-- AUTO_INCREMENT de las tablas volcadas
--

--
-- AUTO_INCREMENT de la tabla `categorias`
--
ALTER TABLE `categorias`
  MODIFY `idCategorias` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT de la tabla `detalles_reporte`
--
ALTER TABLE `detalles_reporte`
  MODIFY `idDetallesReporte` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;

--
-- AUTO_INCREMENT de la tabla `reportes`
--
ALTER TABLE `reportes`
  MODIFY `idReporte` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=23;

--
-- Restricciones para tablas volcadas
--

--
-- Filtros para la tabla `detalles_reporte`
--
ALTER TABLE `detalles_reporte`
  ADD CONSTRAINT `detalles_reporte_ibfk_1` FOREIGN KEY (`reporte_id`) REFERENCES `reportes` (`idReporte`);

--
-- Filtros para la tabla `reportes`
--
ALTER TABLE `reportes`
  ADD CONSTRAINT `reportes_ibfk_1` FOREIGN KEY (`usuario_id`) REFERENCES `usuario` (`idUsuario`),
  ADD CONSTRAINT `reportes_ibfk_2` FOREIGN KEY (`categoria_id`) REFERENCES `categorias` (`idCategorias`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;


================================================
File: composer.json
================================================
{
    "require": {
        "phpmailer/phpmailer": "^6.9"
    }
}


================================================
File: composer.lock
================================================
{
    "_readme": [
        "This file locks the dependencies of your project to a known state",
        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
        "This file is @generated automatically"
    ],
    "content-hash": "baf0b1b659e688a64051c5ee9742a77e",
    "packages": [
        {
            "name": "phpmailer/phpmailer",
            "version": "v6.9.3",
            "source": {
                "type": "git",
                "url": "https://github.com/PHPMailer/PHPMailer.git",
                "reference": "2f5c94fe7493efc213f643c23b1b1c249d40f47e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/PHPMailer/PHPMailer/zipball/2f5c94fe7493efc213f643c23b1b1c249d40f47e",
                "reference": "2f5c94fe7493efc213f643c23b1b1c249d40f47e",
                "shasum": ""
            },
            "require": {
                "ext-ctype": "*",
                "ext-filter": "*",
                "ext-hash": "*",
                "php": ">=5.5.0"
            },
            "require-dev": {
                "dealerdirect/phpcodesniffer-composer-installer": "^1.0",
                "doctrine/annotations": "^1.2.6 || ^1.13.3",
                "php-parallel-lint/php-console-highlighter": "^1.0.0",
                "php-parallel-lint/php-parallel-lint": "^1.3.2",
                "phpcompatibility/php-compatibility": "^9.3.5",
                "roave/security-advisories": "dev-latest",
                "squizlabs/php_codesniffer": "^3.7.2",
                "yoast/phpunit-polyfills": "^1.0.4"
            },
            "suggest": {
                "decomplexity/SendOauth2": "Adapter for using XOAUTH2 authentication",
                "ext-mbstring": "Needed to send email in multibyte encoding charset or decode encoded addresses",
                "ext-openssl": "Needed for secure SMTP sending and DKIM signing",
                "greew/oauth2-azure-provider": "Needed for Microsoft Azure XOAUTH2 authentication",
                "hayageek/oauth2-yahoo": "Needed for Yahoo XOAUTH2 authentication",
                "league/oauth2-google": "Needed for Google XOAUTH2 authentication",
                "psr/log": "For optional PSR-3 debug logging",
                "symfony/polyfill-mbstring": "To support UTF-8 if the Mbstring PHP extension is not enabled (^1.2)",
                "thenetworg/oauth2-azure": "Needed for Microsoft XOAUTH2 authentication"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "PHPMailer\\PHPMailer\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "LGPL-2.1-only"
            ],
            "authors": [
                {
                    "name": "Marcus Bointon",
                    "email": "phpmailer@synchromedia.co.uk"
                },
                {
                    "name": "Jim Jagielski",
                    "email": "jimjag@gmail.com"
                },
                {
                    "name": "Andy Prevost",
                    "email": "codeworxtech@users.sourceforge.net"
                },
                {
                    "name": "Brent R. Matzelle"
                }
            ],
            "description": "PHPMailer is a full-featured email creation and transfer class for PHP",
            "support": {
                "issues": "https://github.com/PHPMailer/PHPMailer/issues",
                "source": "https://github.com/PHPMailer/PHPMailer/tree/v6.9.3"
            },
            "funding": [
                {
                    "url": "https://github.com/Synchro",
                    "type": "github"
                }
            ],
            "time": "2024-11-24T18:04:13+00:00"
        }
    ],
    "packages-dev": [],
    "aliases": [],
    "minimum-stability": "stable",
    "stability-flags": [],
    "prefer-stable": false,
    "prefer-lowest": false,
    "platform": [],
    "platform-dev": [],
    "plugin-api-version": "2.6.0"
}


================================================
File: enviar.php
================================================
<?php
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

// Si usaste Composer
require 'vendor/autoload.php';

// Si descargaste manualmente PHPMailer
// require 'phpmailer/PHPMailer.php';
// require 'phpmailer/Exception.php';
// require 'phpmailer/SMTP.php';

$mail = new PHPMailer(true);

try {
    // Configuración del servidor SMTP
    $mail->isSMTP();
    $mail->Host = 'mail.muninuevochimbote.gob.pe'; // Servidor SMTP
    $mail->SMTPAuth = true;
    $mail->Username = 'alumbradopublico@muninuevochimbote.gob.pe'; // Correo de autenticación
    $mail->Password = 'MDNCH*2025'; // Contraseña
    $mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS; // Usar SSL
    $mail->Port = 465; // Puerto SMTP con SSL

    // Configuración del correo
    $mail->setFrom('alumbradopublico@muninuevochimbote.gob.pe', 'Alumbrado Público');
    $mail->addAddress('alumbradopublico@muninuevochimbote.gob.pe'); // Correo destinatario
    $mail->Subject = 'Prueba de correo desde XAMPP';
    $mail->Body = 'Este es un correo de prueba enviado desde XAMPP con PHPMailer.';

    // Enviar el correo
    $mail->send();
    echo 'El correo se ha enviado correctamente.';
} catch (Exception $e) {
    echo "Error al enviar el correo: {$mail->ErrorInfo}";
}
?>

================================================
File: estructura
================================================
/YoOpinoNeoChimb
├── /confirmacion          # Confirmación de reporte
│   └── confirmacion.php
├── /css                   # Estilos
│   └── estilos.css
├── /js                    # Scripts
│   └── scripts.js
├── /forms                 # Formularios
│   ├── /alumbrado
│   │   └── alumbrado.php
│   ├── /baches
│   │   └── baches.php
│   ├── /basura
│   │   └── basura.php
│   └── /parques
│       └── parques.php
├── /incluides              # Encabezado y pie de página
├── /images                # Imágenes
│   └── imagenes
├── /ImgSubidas            # Imágenes subidas
│   └── imagenes
├── /templates             # Plantillas o vistas
│   ├── home.php
│   └── CVVDF.php
├── /data                  # Archivos de datos y conexión a la base de datos
│   └── db_connection.php
├── index.php
├── report.php
└── process_report.php

================================================
File: upload_image.php
================================================
<?php
/**
 * Este script maneja el proceso de carga de archivos y guarda la URL del archivo en la base de datos.
 * 
 * 
 * Incluye:
 * - data/db_connection.php: Archivo de conexión a la base de datos.
 * 
 * Funcionalidad:
 * - Comprueba si el método de petición es POST y si se ha subido un fichero.
 * Establece el directorio de destino para los archivos subidos.
 * Valida el fichero subido:
 * Comprueba si el archivo es una imagen real.
 * Comprueba si el archivo ya existe.
 * Comprueba el tamaño del archivo (límite: 5 MB).
 * Sólo admite determinados formatos de archivo (JPG, JPEG, PNG, GIF, BMP, PDF).
 * - Si la validación pasa, mueve el archivo subido al directorio de destino.
 * Guarda la URL del archivo en la base de datos.
 * 
 * Variables:
 * - $dir_destino: Directorio donde se almacenarán los archivos subidos.
 * - $archivo_destino: Ruta completa del fichero destino.
 * - $uploadOk: Bandera para determinar si la carga de archivos debe proceder.
 * - $imageFileType: Extensión del archivo subido.
 * - $check: Resultado de la función getimagesize() para comprobar si el archivo es una imagen.
 * - $foto_url: URL del archivo subido que se guardará en la base de datos.
 * - $sql: Consulta SQL para insertar la URL del archivo en la base de datos.
 * 
 * Tratamiento de errores:
 * Mensajes de error para varios fallos de validación.
 * Mensajes de éxito para la carga de archivos y la inserción en la base de datos.
 */
include 'data/db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_FILES["adjunto"])) {
    $target_dir = "ImgSubidas/";
    $target_file = $target_dir . basename($_FILES["adjunto"]["name"]);
    $uploadOk = 1;
    $imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));

    // Check if image file is a actual image or fake image
    $check = getimagesize($_FILES["adjunto"]["tmp_name"]);
    if ($check !== false) {
        $uploadOk = 1;
    } else {
        echo "File is not an image.";
        $uploadOk = 0;
    }

    // Check if file already exists
    if (file_exists($target_file)) {
        echo "Sorry, file already exists.";
        $uploadOk = 0;
    }

    // Check file size
    if ($_FILES["adjunto"]["size"] > 5000000) { // 5MB limit
        echo "Sorry, your file is too large.";
        $uploadOk = 0;
    }

    // Allow certain file formats
    if (
        $imageFileType != "jpg" && $imageFileType != "png" && $imageFileType != "jpeg"
        && $imageFileType != "gif" && $imageFileType != "bmp" && $imageFileType != "pdf"
    ) {
        echo "Sorry, only JPG, JPEG, PNG, GIF, BMP & PDF files are allowed.";
        $uploadOk = 0;
    }

    // Check if $uploadOk is set to 0 by an error
    if ($uploadOk == 0) {
        echo "Sorry, your file was not uploaded.";
        // if everything is ok, try to upload file
    } else {
        if (move_uploaded_file($_FILES["adjunto"]["tmp_name"], $target_file)) {
            echo "The file " . htmlspecialchars(basename($_FILES["adjunto"]["name"])) . " has been uploaded.";
            // Save the file URL to the database
            $foto_url = $target_file;
            $sql = "INSERT INTO reportes (foto_url) VALUES ('$foto_url')";
            if ($conn->query($sql) === TRUE) {
                echo "File URL saved to database.";
            } else {
                echo "Error: " . $sql . "<br>" . $conn->error;
            }
        } else {
            echo "Sorry, there was an error uploading your file.";
        }
    }
}
?>

================================================
File: confirmacion/confirmacion.php
================================================
<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Diseño con Pilares y Mensaje Superpuesto</title>
    <link rel="stylesheet" href="../css/confirmacion.css">
</head>

<body>

    <div class="container">
        <div class="image-container">
            <img src="imagen1.jpg" alt="Imagen 1" class="active">
            <img src="imagen2.jpg" alt="Imagen 2">
            <img src="imagen3.jpg" alt="Imagen 3">
            <img src="imagen4.jpg" alt="Imagen 4">
        </div>
        <div class="pillars-container">
            <div class="pillar pillar-small"></div>
            <div class="pillar pillar-medium"></div>
            <div class="pillar pillar-center"></div>
            <div class="pillar pillar-medium"></div>
            <div class="pillar pillar-small"></div>
            <div class="message-box">
                ¡GRACIAS POR COMPARTIR TU OPINIÓN NUEVO CHIMBOTANO; CON TÚS REPORTES NOS AYUDAS A TOMAR ACCIÓN Y A
                CONSTRUIR UN FUTURO MEJOR PARA LOS CIUDADANOS!
            </div>
        </div>
    </div>

    <script src="../js/confirmacion.js"></script>
</body>

</html>

================================================
File: css/CVVDF.css
================================================
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f9f9f9;
    overflow: hidden;
}

.background-image {
    background: url('../images/2025PlazaMayorCopia2.png') no-repeat center center fixed;
    background-size: cover;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

.content {
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: white;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 900px;
    margin: 3rem auto;
    overflow-y: auto;
    max-height: calc(100vh - 10rem);
    transition: transform 0.3s ease;
}

.content::-webkit-scrollbar {
    width: 0px;
    background: transparent;
}

.noticia {
    width: 70%;
    padding: 10px;
    margin: 20px 0;
    background: white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    border-radius: 10px;
    text-align: center;
    transition: all 0.3s ease-in-out;
    border: 2px dashed #4b4b4b;
}

.yo-participo-section {
    display: flex;
    align-items: center;
    padding: 20px;
    background-color: #ffffff;
    border: 1px solid #ddd;
    border-radius: 8px;
    margin: 20px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.highlight {
    width: 5px;
    height: 50px;
    background-color: #009a01;
    margin-right: 15px;
    border-radius: 2px;
}

@keyframes colorChange {
    0% { color: #FFD700; } /* Amarillo */
    33% { color: #008000; } /* Verde */
    66% { color: #FF0000; } /* Rojo */
    100% { color: #FFD700; } /* Amarillo */
}

.contentm h1 {
    font-size: 2em;
    margin: 0 0 10px;
    animation: colorChange 3s infinite; /* Aplica la animación */
}

.contentm p {
    font-size: 1.2em;
    margin: 0;
    color: #555;
    line-height: 1.5;
}

.menu-item:hover {
    background: radial-gradient(circle, #e7f8ff, #adcfff);
    animation: pulse 0.6s infinite alternate;
}

@keyframes pulse {
    from {
        box-shadow: 0 0 10px #007bff;
    }
    to {
        box-shadow: 0 0 20px #007bff;
    }
}

.menu-item h3,
.menu-item p {
    transition: transform 0.2s ease-in-out;
}

.menu-item:active h3,
.menu-item:active p {
    transform: scale(1.6);
}



================================================
File: css/cartas_index.css
================================================
body {
  height: 100%; /* Ajusta la altura del cuerpo */
  margin: 0;
  padding: 0;
  background: linear-gradient(to bottom, #87ceeb 50%, #f5f5dc 100%);
  background-attachment: fixed;
  font-family: Arial, sans-serif;
}

.background-image {
  background: url('../images/2025PlazaMayorCopia2.png') no-repeat center top;
  background-size: cover;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  height: 100vh;
  width: 100%;
  margin: 0;
  padding: 0;
}

.container {
  max-width: 700px; /* Ajusta el ancho máximo del contenedor */
  margin: 50px auto; /* Ajusta el margen superior e inferior */
  background: #ffffff; /* Ajusta el color de fondo del contenedor */
  padding: 30px; /* Ajusta el espacio interior del contenedor */
  border-radius: 10px; /* Añade bordes redondeados al contenedor */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* Añade una sombra al contenedor */
}

.noticia {
  border-radius: 0px; /* Añade bordes redondeados */
}

h2 {
  text-align: center;
  color: #333;
  font-size: 2em; /* Ajusta el tamaño del texto */
}

p {
  text-align: center;
  text-decoration: none;
  color: #666;
  font-size: 1.2em; /* Ajusta el tamaño del texto */
}

.menu-item {
  flex: 1 1 200px; /* Ajusta el ancho de los elementos */
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin: 10px;
  padding: 10px;
  background: white;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease-in-out;
}

.menu-item:hover {
  text-decoration: none;
  transform: scale(1.05);
}

.menu-item img {
  width: 108px; /* Ajustar el tamaño de la imagen */
  height: 108px; /* Ajustar el tamaño de la imagen */
  margin-bottom: 10px;
}

.menu-item h3 {
  font-size: 1.2em; /* Ajustar el tamaño del texto */
}

.menu-item p {
  font-size: 1em; /* Ajustar el tamaño del texto */
}

.menu-item-titulo h2,
.menu-item-text p {
  font-weight: bold; /* Poner el texto en negrita */
  text-decoration: none; /* Quitar el subrayado */
  color: #000; /* Mantener el color del texto en negro */
}

.menu-item:hover .menu-item-titulo h2,
.menu-item:hover .menu-item-text p,
.yo-participo-section:hover .menu-item-titulo h2,
.yo-participo-section:hover .menu-item-text p {
  text-decoration: underline; /* Subrayar el texto al pasar el mouse */
}

.menu-item-image {
  margin-bottom: 10px; /* Espacio entre la imagen y el texto */
  padding: 10px; /* Añadir relleno para mejor apariencia */
  border-radius: 5px; /* Añadir bordes redondeados */
}

.progress-container {
  width: 100%;
  max-width: 150px; /* Ajustar el tamaño máximo para que se ajusten en una fila */
  margin: 10px;
  padding: 10px;
  border: 1px solid #ddd; /* Añadir un borde alrededor de cada elemento */
  border-radius: 10px;
  transition: transform 0.2s;
  background: #ddd;
  border-radius: 50px;
  overflow: hidden;
  margin: 20px 0;
}

.progress-container:hover {
  transform: scale(1.05);
}

.progress-container .progress {
  height: 8px;
  background: #4caf50;
  width: 25%;
  border-radius: 50px;
}

.progress-bar {
  border-radius: 50px;
  transition: width 0.4s ease;
}

.form-step {
  display: none;
}

.form-step.active {
  display: block;
}

label {
  display: block;
  font-weight: bold;
  margin: 10px 0 5px;
  font-size: 1.1em; /* Ajusta el tamaño del texto */
}

input, select, textarea {
  width: 100%;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 1em; /* Ajusta el tamaño del texto */
}

textarea {
  resize: vertical;
  height: 100px;
}

button {
  display: block;
  width: 100%;
  padding: 10px;
  background: #28a745;
  color: white;
  font-size: 1.2em; /* Ajusta el tamaño del texto */
  border: none;
  border-radius: 5px;
  cursor: pointer;
  margin-top: 15px;
}

button:hover {
  background: #218838;
}

.next-btn {
  background: #007bff;
}

.basura-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  margin-top: 10px;
}

.report-container {
  display: flex; /* Ajusta los elementos en una fila */
  flex-wrap: wrap; /* Ajusta los elementos en una fila */
  justify-content: center; /* Centra los elementos horizontalmente */
  gap: 2px; /* Ajusta el espacio entre los elementos */
}

.basura-image {
  width: 100%;
  height: 450px; /* Ajusta la altura según tus necesidades */
  border-radius: 10px;
  overflow: hidden;
  border: 1px solid #ddd;
}

.basura-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 10px;
}

.content {
  background-color: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  width: 90%;
  max-width: 10000px;
  margin-top: -10rem;
  margin-bottom: 2rem;
}


================================================
File: css/confirmacion.css
================================================
body {
    margin: 0;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    background: linear-gradient(to top, #54ac57, #4caf50, #99eb9b);
    font-family: Arial, sans-serif;
    text-align: center;
}

.container {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.image-container {
    width: 300px;
    height: 250px;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    position: relative;
}

.image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    transition: opacity 1s ease-in-out;
}

.image-container img.active {
    opacity: 1;
}

.pillars-container {
    display: flex;
    align-items: flex-end;
    justify-content: space-between;
    width: 700px;
    position: relative;
    margin-top: 50px;
}

.pillar {
    background: black;
    position: relative;
    border-radius: 5px;
}

.pillar::before,
.pillar::after {
    content: "";
    position: absolute;
    width: 130%;
    height: 20px;
    background: black;
    left: -15%;
    border-radius: 3px;
}

.pillar::before {
    top: -10px;
}

.pillar::after {
    bottom: -10px;
}

.pillar-center {
    width: 120px;
    height: 200px;
}

.pillar-medium {
    width: 100px;
    height: 140px;
}

.pillar-small {
    width: 80px;
    height: 100px;
}

@keyframes bounce {
    0% { transform: translate(-50%, -50%) translateY(-30px); opacity: 0; }
    40% { transform: translate(-50%, -50%) translateY(10px); opacity: 1; }
    60% { transform: translate(-50%, -50%) translateY(-5px); }
    80% { transform: translate(-50%, -50%) translateY(3px); }
    100% { transform: translate(-50%, -50%) translateY(0); }
}

.message-box {
    position: absolute;
    top: 50%;
    left: 50%;
    background: rgba(255, 255, 255, 0.9);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
    font-weight: bold;
    font-size: 18px;
    max-width: 500px;
    z-index: 2;
    transform: translate(-50%, -50%);
    animation: bounce 1s ease-out;
}

================================================
File: css/contenedorNoticia.css
================================================
.noticia {
    width: 70%; /* Ajusta el ancho de la noticia */
    height: 400px; /* Ajusta la altura de la noticia */
    padding: 10px; /* Ajusta el espacio interior de la noticia */
    margin: 20px; /* Ajusta el espacio entre las noticias */
    background: white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    border-radius: 0px; /* Añade bordes redondeados */
    text-align: center;
    transition: all 0.3s ease-in-out;
    border: 2px dashed #4b4b4b; /* Añade un borde de guiones */
}

.noticia img {
    width: 90%;
    height: 70%;
    border-radius: 0px;
}

.noticia h2 {
    color: #333;
    transition: color 0.3s ease-in-out;
}

.noticia p {
    color: #666;
}

.noticia:hover {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.noticia:hover h2 {
    color: #007BFF;
}


================================================
File: css/index.css
================================================
body {
  height: 100%;
  margin: 0;
  padding: 0;
  background: linear-gradient(to bottom, #87ceeb 50%, #f5f5dc 100%);
  background-attachment: fixed;
  font-family: Arial, sans-serif;
}

.container {
  max-width: 700px;
  margin: 50px auto;
  background: #ffffff;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

h2 {
  text-align: center;
  color: #333;
  font-size: 2em; /* Ajusta el tamaño del texto */
}

p {
  text-align: center;
  color: #666;
  font-size: 1.2em; /* Ajusta el tamaño del texto */
}

.progress-container {
  width: 100%;
  background: #ddd;
  border-radius: 50px;
  overflow: hidden;
  margin: 20px 0;
}

.progress-container .progress {
  height: 8px;
  background: #4caf50;
  width: 25%;
  border-radius: 50px;
}

.progress-bar {
  border-radius: 50px;
  transition: width 0.4s ease;
}

.form-step {
  display: none;
}

.form-step.active {
  display: block;
}

label {
  display: block;
  font-weight: bold;
  margin: 10px 0 5px;
  font-size: 1.1em; /* Ajusta el tamaño del texto */
}

input, select, textarea {
  width: 100%;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 1em; /* Ajusta el tamaño del texto */
}

textarea {
  resize: vertical;
  height: 100px;
}

.basura-section {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-top: 10px;
}

.basura-image {
  width: 100%;
  height: 450px; /* Ajusta la altura según tus necesidades */
  border-radius: 10px;
  overflow: hidden;
  border: 1px solid #ddd;
}

.basura-image img {
  width: 100%; /* Ajusta el ancho de la imagen */
  height: 100%; /* Ajusta el alto de la imagen */
  object-fit: cover;
  border-radius: 10px;
}

button {
  display: block;
  width: 100%;
  padding: 10px;
  background: #28a745;
  color: white;
  font-size: 1.2em; /* Ajusta el tamaño del texto */
  border: none;
  border-radius: 5px;
  cursor: pointer;
  margin-top: 15px;
}

button:hover {
  background: #218838;
}

.next-btn {
  background: #007bff;
}

.next-btn:hover {
  background: #0056b3;
}

================================================
File: data/db_connection.php
================================================
<?php
class Database
{
    private static $instance = null;
    private $connection;

    private function __construct()
    {
        $servername = "localhost";
        $username = "root";
        $password = "";
        $dbname = "YoOpinoNeoChimb";

        $this->connection = new mysqli($servername, $username, $password, $dbname);
        if ($this->connection->connect_error) {
            die("Connection failed: " . $this->connection->connect_error);
        }
    }

    public static function getInstance()
    {
        if (self::$instance == null) {
            self::$instance = new Database();
        }
        return self::$instance;
    }

    public function getConnection()
    {
        return $this->connection;
    }
}

// Uso del Singleton para obtener la conexión
$db = Database::getInstance()->getConnection();
echo "Connected successfully";
?>

================================================
File: forms/BASURA/basura.php
================================================
<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reporte de Basura</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <!-- Material Icons -->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined" rel="stylesheet">
  <!-- Roboto Condensed -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@400;700&display=swap" rel="stylesheet">
  <!-- Custom CSS -->
  <link rel="stylesheet" href="estilo.css">
</head>

<body>
  <div class="container mt-5">
    <!-- Barra de progreso -->
    <div class="progress-container mb-4">
      <div class="progress">
        <div class="progress-bar bg-warning progress-bar-striped progress-bar-animated" id="progressBar"
          style="width: 33%;"></div>
      </div>
      <div class="d-flex justify-content-between mt-1">
        <span class="text-warning fw-bold">Paso 1</span>
        <span class="fw-bold">Paso 2</span>
        <span class="fw-bold">Paso 3</span>
      </div>
    </div>

    <!-- Formulario -->
    <form id="multiStepForm" class="card shadow-sm p-4" action="process_report_basura.php" method="POST"
      enctype="multipart/form-data">
      <!-- Paso 1: Registro de Usuario -->
      <div class="form-step active">
        <h2 class="text-center mb-4">Registro de Usuario</h2>
        <div class="row gy-3">
          <div class="col-md-6">
            <label for="Nombres" class="form-label"><i class="fa-solid fa-user"></i> Nombres</label>
            <input type="text" id="Nombres" name="Nombres" class="form-control" placeholder="Tu nombre" required>
          </div>
          <div class="col-md-6">
            <label for="apellidos" class="form-label"><i class="fa-solid fa-user"></i> Apellidos</label>
            <input type="text" id="apellidos" name="apellidos" class="form-control" placeholder="Tus apellidos"
              required>
          </div>
          <div class="col-md-6">
            <label for="TipoIdentificacion" class="form-label"><i class="fa-solid fa-id-card"></i> Tipo de
              Documento</label>
            <select id="TipoIdentificacion" name="TipoIdentificacion" class="form-select" required>
              <option value="" disabled selected>Seleccionar</option>
              <option value="1">DNI</option>
              <option value="2">RUC</option>
            </select>
          </div>
          <div class="col-md-6">
            <label for="docNumber" class="form-label"><i class="fa-solid fa-id-badge"></i> Número de Documento</label>
            <input type="text" id="docNumber" name="docNumber" class="form-control" placeholder="Número de documento"
              required>
          </div>
          <div class="col-md-6">
            <label for="Telefono" class="form-label"><i class="fa-solid fa-phone"></i> Teléfono</label>
            <input type="tel" id="Telefono" name="Telefono" class="form-control" placeholder="Número de teléfono"
              required>
          </div>
          <div class="col-md-6">
            <label for="email" class="form-label"><i class="fa-solid fa-envelope"></i> Correo Electrónico</label>
            <input type="email" id="email" name="email" class="form-control" placeholder="Correo electrónico" required>
          </div>
        </div>
        <div class="text-center mt-4">
          <button type="button" class="btn btn-warning next-btn">Siguiente</button>
        </div>
      </div>

      <!-- Paso 2: Reporte de Basura -->
      <div class="form-step">
        <h2 class="text-center mb-4">Reporte de Basura</h2>
        <div class="row">
          <div class="col-md-6">
            <div class="report-info">
              <span class="roboto-condensed-bold"><i class="fa-solid fa-triangle-exclamation"></i>
                DATOS DEL REPORTE
              </span>
            </div>
          </div>
          <div class="col-md-6">
            <div class="flex-grow-1">
              <div class="mb-3">
                <label for="causa" class="form-label"><i class="fa-solid fa-exclamation-triangle"></i> Causa</label>
                <select id="causa" name="causa" class="form-select" required>
                  <option value="" disabled selected>Seleccionar</option>
                  <option value="Falta de conciencia ambiental">Falta de conciencia ambiental</option>
                  <option value="Abandono de residuos en espacios públicos/negligencia">Abandono de residuos en espacios
                    públicos/negligencia</option>
                  <option value="Deficiencia en la recolección de basura">Deficiencia en la recolección de basura
                  </option>
                  <option value="Vertederos ilegales">Vertederos ilegales</option>
                  <option value="Desbordamiento de contenedores de basura">Desbordamiento de contenedores de basura
                  </option>
                  <option value="Incremento de residuos debido a eventos especiales">Incremento de residuos debido a
                    eventos especiales</option>
                </select>
              </div>

              <div class="mb-3">
                <label for="lugarAfectado" class="form-label"><i class="fa-solid fa-map"></i> Lugar Afectado</label>
                <select id="lugarAfectado" name="lugarAfectado" class="form-select" required>
                  <option value="" disabled selected>Seleccionar</option>
                  <option value="Calles y avenidas">Calles y avenidas</option>
                  <option value="Playas">Playas</option>
                  <option value="Estacionamiento">Estacionamiento</option>
                  <option value="Parques y áreas verdes">Parques y áreas verdes</option>
                  <option value="Hospitales y centros de salud">Hospitales y centros de salud</option>
                </select>
              </div>

              <div class="mb-3">
                <label for="Direccion" class="form-label"><i class="fa-solid fa-map-marker-alt"></i> Ubicación</label>
                <input type="text" id="Direccion" name="Direccion" class="form-control"
                  placeholder="Dirección o referencia" required>
                <ul id="suggestions" class="list-group"></ul>
              </div>

              <div class="mb-3">
                <label for="tiempo" class="form-label"><i class="fa-solid fa-clock"></i> Tiempo</label>
                <select id="tiempo" name="tiempo" class="form-select" required>
                  <option value="" disabled selected>Seleccionar</option>
                  <option value="1 mes">1 mes</option>
                  <option value="2 meses">2 meses</option>
                  <option value="3 meses">3 meses</option>
                  <option value="más de 3 meses">más de 3 meses</option>
                </select>
              </div>

              <div class="mb-3">
                <label for="descripcion" class="form-label"><i class="fa-solid fa-file-alt"></i> Descripción</label>
                <textarea id="descripcion" name="descripcion" class="form-control"
                  placeholder="Describe el problema en detalle y su ubicación" rows="4" required></textarea>
              </div>
              <div class="mb-3">
                <label for="photo" class="form-label"><i class="fa-solid fa-camera"></i> Subir Foto del Problema</label>
                <input type="file" id="photo" name="photo" class="form-control" accept="image/*">
              </div>
            </div>
          </div>
        </div>
        <div class="d-flex justify-content-between mt-4">
          <button type="button" class="btn btn-secondary prev-btn">Anterior</button>
          <button type="button" class="btn btn-warning next-btn">Siguiente</button>
        </div>
      </div>

      <!-- Paso 3: Confirmar Envío -->
      <div class="form-step">
        <h2 class="text-center mb-4">Confirmar Envío</h2>
        <p class="text-center">Revisa los datos antes de enviar:</p>
        <ul class="list-group mb-4">
          <li class="list-group-item"><strong>Nombres:</strong> <span id="summary-name"></span></li>
          <li class="list-group-item"><strong>Apellidos:</strong> <span id="summary-lastname"></span></li>
          <li class="list-group-item"><strong>Documento:</strong> <span id="summary-docNumber"></span></li>
          <li class="list-group-item"><strong>Teléfono:</strong> <span id="summary-Telefono"></span></li>
          <li class="list-group-item"><strong>Correo:</strong> <span id="summary-email"></span></li>
          <li class="list-group-item"><strong>Reporte:</strong> <span id="summary-report"></span></li>
          <li class="list-group-item"><strong>Causa:</strong> <span id="summary-causa"></span></li>
          <li class="list-group-item"><strong>Tiempo:</strong> <span id="summary-tiempo"></span></li>
          <li class="list-group-item"><strong>Lugar Afectado:</strong> <span id="summary-lugarAfectado"></span></li>
        </ul>
        <div class="d-flex justify-content-between">
          <button type="button" class="btn btn-secondary prev-btn">Anterior</button>
          <button type="submit" class="btn btn-warning">Enviar</button>
        </div>
      </div>
    </form>
  </div>

  <!-- Bootstrap JS -->
  <script src="ga.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const nextBtns = document.querySelectorAll('.next-btn');
      const prevBtns = document.querySelectorAll('.prev-btn');
      const formSteps = document.querySelectorAll('.form-step');
      let formStepIndex = 0;

      nextBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          formStepIndex++;
          updateFormSteps();
          updateProgressBar();
          if (formStepIndex === 2) {
            updateSummary();
          }
        });
      });

      prevBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          formStepIndex--;
          updateFormSteps();
          updateProgressBar();
        });
      });

      function updateFormSteps() {
        formSteps.forEach((formStep, index) => {
          formStep.classList.toggle('active', index === formStepIndex);
        });
      }

      function updateProgressBar() {
        const progressBar = document.getElementById('progressBar');
        progressBar.style.width = `${(formStepIndex + 1) * 33}%`;
      }

      function updateSummary() {
        document.getElementById('summary-name').textContent = document.getElementById('Nombres').value;
        document.getElementById('summary-lastname').textContent = document.getElementById('apellidos').value;
        document.getElementById('summary-docNumber').textContent = `${document.getElementById('docNumber').value} ${document.getElementById('TipoIdentificacion').value}`;
        document.getElementById('summary-Telefono').textContent = document.getElementById('Telefono').value;
        document.getElementById('summary-email').textContent = document.getElementById('email').value;
        document.getElementById('summary-report').textContent = document.getElementById('descripcion').value;
        document.getElementById('summary-causa').textContent = document.getElementById('causa').value;
        document.getElementById('summary-tiempo').textContent = document.getElementById('tiempo').value;
        document.getElementById('summary-lugarAfectado').textContent = document.getElementById('lugarAfectado').value;
      }
    });
  </script>
</body>

</html>
<script src="ubicacion.js"></script>

================================================
File: forms/BASURA/estilo.css
================================================
body {
  height: 100%;
  margin: 0;
  padding: 0;
  background: linear-gradient(to bottom, #87ceeb 50%, #f5f5dc 100%);
  background-attachment: fixed;
  font-family: "Roboto Condensed", serif; /* Aplica la fuente a todo el cuerpo */
}

.container {
  max-width: 700px;
  margin: 50px auto;
  background: #ffffff;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

.progress-container .progress {
  height: 8px;
  border-radius: 50px;
}

.progress-bar {
  border-radius: 50px;
  transition: width 0.4s ease;
}

.form-step {
  display: none;
}

.form-step.active {
  display: block;
}

.bache-section {
  display: flex;
  align-items: center;
  gap: 20px;
}

.bache-section .bache-image {
  width: 40%;
  height: auto;
  border-radius: 10px;
}

.bache-section img {
  width: 100%;
  height: 450px;
  border-radius: 10px;
}

.report-info {
  width: 100%;
  height: 570px;
  background-color: #87ceeb; /* Ajusta el color de fondo */
  display: flex;
  justify-content: flex-start; /* Alinea el contenido a la izquierda */
  align-items: center; /* Centra el contenido verticalmente */
  border-radius: 10px; /* Añade bordes redondeados */
  padding-left: 20px; /* Añade un poco de padding a la izquierda */
  border: 2px solid #A4A4A4; /* Añade un borde */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Añade una sombra */
}

.report-info span {
  color: white;
  font-weight: bold;
  font-size: 1.5em;
  text-align: left; /* Alinea el texto a la izquierda */
}

.roboto-condensed-bold {
  font-family: "Roboto Condensed", serif;
  font-optical-sizing: auto;
  font-weight: 700; /* Puedes ajustar el peso según tus necesidades */
  font-style: normal;
}

/* Estilo para las opciones del formulario */
select option {
  color: #A4A4A4;
}

/* Estilo para las respuestas del formulario */
input, select, textarea {
  color: #A4A4A4;
}

================================================
File: forms/BASURA/process_report_basura.php
================================================
<?php
require_once '../../data/db_connection.php'; // Asegúrate de que este archivo existe y tiene la conexión correcta
require_once 'send_email.php';
require_once '../../vendor/autoload.php'; // Asegúrate de que la ruta sea correcta
require_once '../../upload_image.php'; // Asegúrate de que este archivo existe y tiene la conexión correcta

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $Nombres = $_POST['Nombres'] ?? '';
    $apellidos = $_POST['apellidos'] ?? '';
    $TipoIdentificacion = $_POST['TipoIdentificacion'] ?? '';
    $idUsuario = $_POST['docNumber'] ?? ''; // Usar el número de documento como idUsuario
    $Telefono = $_POST['Telefono'] ?? '';
    $email = $_POST['email'] ?? '';
    $Direccion = $_POST['Direccion'] ?? '';
    $descripcion = $_POST['descripcion'] ?? '';
    $categoria_id = 4; // Basura por defecto

    if (empty($Nombres) || empty($email) || empty($descripcion)) {
        die("Error: Todos los campos obligatorios deben estar llenos");
    }

    // Subir la foto
    $foto_url = null;
    if (isset($_FILES['photo']) && $_FILES['photo']['error'] == UPLOAD_ERR_OK) {
        $foto_tmp = $_FILES['photo']['tmp_name'];
        $foto_name = basename($_FILES['photo']['name']);
        $foto_dir = '../../ImgSubidas/' . $foto_name;
        if (move_uploaded_file($foto_tmp, $foto_dir)) {
            $foto_url = $foto_dir;
        }
    }

    // Obtener la instancia de la base de datos
    $conn = Database::getInstance()->getConnection();

    // Insertar usuario si no existe
    $stmt = $conn->prepare("INSERT INTO usuario (idUsuario, TipoIdentificacion, Nombres, Apellidos, Telefono, Direccion, Correo) VALUES (?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE TipoIdentificacion=VALUES(TipoIdentificacion), Nombres=VALUES(Nombres), Apellidos=VALUES(Apellidos), Telefono=VALUES(Telefono), Direccion=VALUES(Direccion), Correo=VALUES(Correo)");
    $stmt->bind_param("issssss", $idUsuario, $TipoIdentificacion, $Nombres, $apellidos, $Telefono, $Direccion, $email);
    if (!$stmt->execute()) {
        echo "Error al insertar el usuario: " . $stmt->error;
        $stmt->close();
        $conn->close();
        exit();
    }
    $stmt->close();

    // Verificar si el usuario se insertó correctamente
    $stmt = $conn->prepare("SELECT idUsuario FROM usuario WHERE idUsuario = ?");
    $stmt->bind_param("i", $idUsuario);
    $stmt->execute();
    $stmt->store_result();

    if ($stmt->num_rows > 0) {
        // Insertar reporte
        $stmt = $conn->prepare("INSERT INTO reportes (usuario_id, categoria_id, descripcion, Direccion, foto_url) VALUES (?, ?, ?, ?, ?)");
        $stmt->bind_param("iisss", $idUsuario, $categoria_id, $descripcion, $Direccion, $foto_url);

        if ($stmt->execute()) {
            // Crear el cuerpo del correo con todos los datos del reporte
            $message = "
                <h2>Nuevo Reporte de Basura</h2>
                <p><strong>Nombres:</strong> $Nombres</p>
                <p><strong>Apellidos:</strong> $apellidos</p>
                <p><strong>Tipo de Documento:</strong> $TipoIdentificacion</p>
                <p><strong>Número de Documento:</strong> $idUsuario</p>
                <p><strong>Email:</strong> $email</p>
                <p><strong>Teléfono:</strong> $Telefono</p>
                <p><strong>Dirección:</strong> $Direccion</p>
                <p><strong>Descripción:</strong> $descripcion</p>
                <p><strong>Foto URL:</strong> $foto_url</p>
            ";

            // Enviar correos
            send_email("basura@muninuevochimbote.gob.pe", "Nuevo reporte de basura", $message, [$foto_url]);
            // Redirigir a la página de confirmación
            header("Location: ../../confirmacion/confirmacion.php");
            exit();
        } else {
            echo "Error al guardar el reporte: " . $stmt->error;
        }
        $stmt->close();
    } else {
        echo "Error: No se pudo encontrar el usuario.";
        $stmt->close();
    }
    $conn->close();
} else {
    echo "Método no permitido.";
}
?>

================================================
File: forms/BASURA/send_email.php
================================================
<?php
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

require '../../vendor/autoload.php'; // Asegúrate de que la ruta sea correcta

if (!function_exists('send_email')) {
    // Esta función envía un correo electrónico de confirmación después de recibir un reporte
    function send_email($to, $subject, $message)
    {
        $mail = new PHPMailer(true);

        try {
            // Configuración del servidor SMTP
            $mail->isSMTP();
            $mail->Host = 'mail.muninuevochimbote.gob.pe'; // Servidor SMTP
            $mail->SMTPAuth = true;
            $mail->Username = 'basura@muninuevochimbote.gob.pe'; // Correo de autenticación
            $mail->Password = 'MDNCH*2025'; // Contraseña
            $mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS; // Usar SSL
            $mail->Port = 465; // Puerto SMTP con SSL

            // Configuración del correo
            $mail->CharSet = 'UTF-8'; // Establecer la codificación de caracteres a UTF-8
            $mail->Encoding = 'base64'; // Establecer la codificación del contenido a base64
            $mail->setFrom('basura@muninuevochimbote.gob.pe', 'Reporte de Basura');
            $mail->addAddress("basura@muninuevochimbote.gob.pe"); // Correo destinatario
            $mail->Subject = $subject;
            $mail->Body = $message;
            $mail->isHTML(true); // Establecer el formato del correo a HTML

            // Enviar el correo
            $mail->send();
            return true;
        } catch (Exception $e) {
            echo "Error al enviar el correo: {$mail->ErrorInfo}";
            return false;
        }
    }
}
?>

================================================
File: forms/BASURA/ubicacion.js
================================================
document.getElementById("Direccion").addEventListener("input", function () {
    const query = this.value;
    if (query.length > 2) {
      fetch(
        `https://nominatim.openstreetmap.org/search?format=json&countrycodes=PE&viewbox=-78.55,-9.05,-78.45,-9.15&q=${query}`
      )
        .then((response) => response.json())
        .then((data) => {
          const suggestions = document.getElementById("suggestions");
          suggestions.innerHTML = "";
          data.forEach((item) => {
            const li = document.createElement("li");
            li.classList.add("list-group-item");
            li.textContent = item.display_name;
            li.addEventListener("click", function () {
              document.getElementById("Direccion").value = item.display_name;
              suggestions.innerHTML = "";
            });
            suggestions.appendChild(li);
          });
        });
    }
  });

================================================
File: forms/alumbrado/alumbrado.php
================================================
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Reporte de Deficiencia en Alumbrado Público</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
  <!-- Material Icons -->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined" rel="stylesheet">
  <!-- Roboto Condensed -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@400;700&display=swap" rel="stylesheet">
  <!-- Custom CSS -->
  <link rel="stylesheet" href="esti.css" />
</head>

<body>
  <div class="container mt-5">
    <!-- Barra de progreso -->
    <div class="progress-container mb-4">
      <div class="progress">
        <div class="progress-bar bg-warning progress-bar-striped progress-bar-animated" id="progressBar"
          style="width: 33%"></div>
      </div>
      <div class="d-flex justify-content-between mt-2">
        <span class="text-warning fw-bold">Paso 1</span>
        <span class="fw-bold">Paso 2</span>
        <span class="fw-bold">Paso 3</span>
      </div>
    </div>

    <!-- Formulario -->
    <form id="multiStepForm" class="card shadow-sm p-4" action="process_report_alumbrado.php" method="POST"
      enctype="multipart/form-data">
      <!-- Paso 1: Registro de Usuario -->
      <div class="form-step active">
        <h2 class="text-center mb-4">Registro de Usuario</h2>
        <div class="row gy-3">
          <div class="col-md-6">
            <label for="Nombres" class="form-label"><i class="fa-solid fa-asterisk"></i> Nombres</label>
            <input type="text" id="Nombres" name="Nombres" class="form-control" placeholder="Tus Nombres" required>
          </div>
          <div class="col-md-6">
            <label for="apellidos" class="form-label"><i class="fa-solid fa-asterisk"></i> Apellidos</label>
            <input type="text" id="apellidos" name="apellidos" class="form-control" placeholder="Tus apellidos"
              required>
          </div>
          <div class="col-md-6">
            <label for="TipoIdentificacion" class="form-label"><i class="fa-solid fa-id-card"></i> Tipo de
              Documento</label>
            <select id="TipoIdentificacion" name="TipoIdentificacion" class="form-select" required>
              <option value="" disabled selected>Seleccionar</option>
              <option value="1">DNI</option>
              <option value="2">RUC</option>
            </select>
          </div>
          <div class="col-md-6">
            <label for="docNumber" class="form-label"><i class="fa-solid fa-asterisk"></i> Número de Documento</label>
            <input type="text" id="docNumber" name="docNumber" class="form-control" placeholder="Número de documento"
              required>
          </div>
          <div class="col-md-6">
            <label for="Telefono" class="form-label"><i class="fa-solid fa-phone"></i> Teléfono</label>
            <input type="tel" id="Telefono" name="Telefono" class="form-control" placeholder="Número de teléfono"
              required>
          </div>
          <div class="col-md-6">
            <label for="email" class="form-label"><i class="fa-solid fa-envelope"></i> Email</label>
            <input type="email" id="email" name="email" class="form-control" placeholder="Tu email" required>
          </div>
        </div>
        <div class="text-center mt-4">
          <button type="button" class="btn btn-warning next-btn">Siguiente</button>
        </div>
      </div>

      <!-- Paso 2: Reporte de Alumbrado Público -->
      <div class="form-step">
        <h2 class="text-center mb-4">Reporte de Deficiencia en Alumbrado Público</h2>
        <div class="lighting-section">
          <div class="lighting-image">
            <div class="report-info">
              <span class="roboto-condensed-bold"><i class="fa-solid fa-triangle-exclamation"></i>
                DATOS DEL REPORTE
              </span>
            </div>
          </div>
          <div class="flex-grow-1">
            <div class="mb-3">
              <label for="lightingType" class="form-label"><i class="fa-solid fa-asterisk"></i> Tipo de
                Problema</label>
              <select id="lightingType" class="form-select" required>
                <option value="" disabled selected>Seleccionar</option>
                <option value="apagado">Farola apagada</option>
                <option value="parpadeo">Farola parpadeando</option>
                <option value="dañado">Farola dañada</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="Direccion" class="form-label"><i class="fa-solid fa-map-marker-alt"></i> Ubicación</label>
              <input type="text" id="Direccion" name="Direccion" class="form-control"
                placeholder="Dirección o referencia" required>
              <ul id="suggestions" class="list-group"></ul>
            </div>
            <div class="mb-3">
              <label for="monthsPresent" class="form-label"><i class="fa-solid fa-asterisk"></i> ¿Desde cuándo está
                presente?</label>
              <select id="monthsPresent" class="form-select" required>
                <option value="" disabled selected>Seleccionar</option>
                <option value="1">1 mes</option>
                <option value="2">2 meses</option>
                <option value="3">3 meses</option>
                <option value="4">4 meses</option>
                <option value="5+">Más de 4 meses</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="descripcion" class="form-label"><i class="fa-solid fa-asterisk"></i> Descripción</label>
              <textarea id="descripcion" name="descripcion" class="form-control"
                placeholder="Describe la Ubicación y el problema en detalle" rows="4" required></textarea>
            </div>
            <div class="mb-3">
              <label for="photo1" class="form-label"><i class="fa-solid fa-camera"></i> Subir Foto del Problema
                1</label>
              <input type="file" id="photo1" name="photos[]" class="form-control" accept="image/*">
            </div>
            <div class="mb-3">
              <label for="photo2" class="form-label"><i class="fa-solid fa-camera"></i> Subir Foto del Problema
                2</label>
              <input type="file" id="photo2" name="photos[]" class="form-control" accept="image/*">
            </div>
            <div class="mb-3">
              <label for="photo3" class="form-label"><i class="fa-solid fa-camera"></i> Subir Foto del Problema
                3</label>
              <input type="file" id="photo3" name="photos[]" class="form-control" accept="image/*">
            </div>
          </div>
        </div>
        <div class="d-flex justify-content-between mt-4">
          <button type="button" class="btn btn-secondary prev-btn">Anterior</button>
          <button type="button" class="btn btn-warning next-btn">Siguiente</button>
        </div>
      </div>

      <!-- Paso 3: Confirmar Envío -->
      <div class="form-step">
        <h2 class="text-center mb-4">Confirmar Envío</h2>
        <p class="text-center">Revisa los datos antes de enviar:</p>
        <ul class="list-group mb-4">
          <li class="list-group-item"><strong>Nombres:</strong> <span id="summary-name"></span></li>
          <li class="list-group-item"><strong>Apellidos:</strong> <span id="summary-lastname"></span></li>
          <li class="list-group-item"><strong>Documento:</strong> <span id="summary-docNumber"></span></li>
          <li class="list-group-item"><strong>Teléfono:</strong> <span id="summary-Telefono"></span></li>
          <li class="list-group-item"><strong>Correo:</strong> <span id="summary-email"></span></li>
          <li class="list-group-item"><strong>Reporte:</strong> <span id="summary-report"></span></li>
        </ul>
        <div class="d-flex justify-content-between">
          <button type="button" class="btn btn-secondary prev-btn">Anterior</button>
          <button type="submit" class="btn btn-warning">Enviar</button>
        </div>
      </div>
    </form>
  </div>

  <script>
    document.getElementById('multiStepForm').addEventListener('submit', function () {
      // Perform form submission logic here
      window.location.href = '../../templates/CVVDF.php';
    });
  </script>

  <!-- Bootstrap JS -->
  <script src="ga.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const nextBtns = document.querySelectorAll('.next-btn');
      const prevBtns = document.querySelectorAll('.prev-btn');
      const formSteps = document.querySelectorAll('.form-step');
      let formStepIndex = 0;

      nextBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          formStepIndex++;
          updateFormSteps();
          updateProgressBar();
          if (formStepIndex === 2) {
            updateSummary();
          }
        });
      });

      prevBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          formStepIndex--;
          updateFormSteps();
          updateProgressBar();
        });
      });

      function updateFormSteps() {
        formSteps.forEach((formStep, index) => {
          formStep.classList.toggle('active', index === formStepIndex);
        });
      }

      function updateProgressBar() {
        const progressBar = document.getElementById('progressBar');
        progressBar.style.width = `${(formStepIndex + 1) * 33}%`;
      }

      function updateSummary() {
        document.getElementById('summary-name').textContent = document.getElementById('Nombres').value;
        document.getElementById('summary-lastname').textContent = document.getElementById('apellidos').value;
        document.getElementById('summary-docNumber').textContent = `${document.getElementById('docNumber').value} ${document.getElementById('TipoIdentificacion').value}`;
        document.getElementById('summary-Telefono').textContent = document.getElementById('Telefono').value;
        document.getElementById('summary-email').textContent = document.getElementById('email').value;
        document.getElementById('summary-report').textContent = document.getElementById('descripcion').value;
      }
    });
  </script>
</body>

</html>
<script src="ubicacion.js"></script>

================================================
File: forms/alumbrado/esti.css
================================================
body {
  height: 100%;
  margin: 0;
  padding: 0;
  background: radial-gradient(circle at center, #0d1b2a 0%, #1b263b 50%, #0a0e17 100%);
  background-attachment: fixed;
  font-family: "Roboto Condensed", serif; /* Aplica la fuente a todo el cuerpo */
}

.container {
  max-width: 700px;
  margin: 50px auto;
  background: #ffffff;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

.progress-container .progress {
  height: 8px;
  border-radius: 50px;
}

.progress-bar {
  border-radius: 50px;
  transition: width 0.4s ease;
}

.form-step {
  display: none;
}

.form-step.active {
  display: block;
}

.lighting-section {
  display: flex; /* Alinea los elementos en fila */ 
  align-items: center; /* Centra horizontalmente */
  gap: 20px; /* Ajusta el espacio entre los elementos */
}

.lighting-section .lighting-image {
  width: 40%; /* Ajusta el ancho del contenedor */
  height: auto; /* Ajusta la altura del contenedor */
  border-radius: 10px; /* Añade bordes redondeados */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Añade una sombra */
}

.lighting-section img {
  width: 100%;
  height: 450px;
  border-radius: 10px;
}

.report-info {
  width: 100%; /* Ajusta el ancho del contenedor */
  height: 450px; /* Ajusta la altura del contenedor */
  background-color: #ffc107; /* Ajusta el color de fondo */
  display: flex; /* Alinea los elementos en fila */
  justify-content: flex-start; /* Alinea el contenido a la izquierda */
  align-items: center; /* Centra el contenido verticalmente */
  border-radius: 10px; /* Añade bordes redondeados */
  padding-left: 20px; /* Añade un poco de padding a la izquierda */
  border: 2px solid #A4A4A4; /* Añade un borde negro */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Añade una sombra */
}

.report-info span {
  color: white;
  font-weight: bold;
  font-size: 1.5em;
  text-align: left; /* Alinea el texto a la izquierda */
}

.roboto-condensed-bold {
  font-family: "Roboto Condensed", serif;
  font-optical-sizing: auto;
  font-weight: 700; /* Puedes ajustar el peso según tus necesidades */
  font-style: normal;
}

/* Estilo para las opciones del formulario */
select option {
  color: #c9c9c9;
}

/* Estilo para las respuestas del formulario */
input, select, textarea {
  color: #c9c9c9;
}

================================================
File: forms/alumbrado/ga.js
================================================
const steps = document.querySelectorAll(".form-step");
const progressBar = document.getElementById("progressBar");
let currentStep = 0;

// Botones "Siguiente"
document.querySelectorAll(".next-btn").forEach((btn) => {
  btn.addEventListener("click", () => {
    if (currentStep < steps.length - 1) {
      steps[currentStep].classList.remove("active");
      currentStep++;
      steps[currentStep].classList.add("active");
      updateProgressBar();
    }
  });
});

// Botones "Anterior"
document.querySelectorAll(".prev-btn").forEach((btn) => {
  btn.addEventListener("click", () => {
    if (currentStep > 0) {
      steps[currentStep].classList.remove("active");
      currentStep--;
      steps[currentStep].classList.add("active");
      updateProgressBar();
    }
  });
});

// Actualizar barra de progreso
function updateProgressBar() {
  const progress = ((currentStep + 1) / steps.length) * 100;
  progressBar.style.width = `${progress}%`;
}


================================================
File: forms/alumbrado/process_report_alumbrado.php
================================================
<?php
require_once '../../data/db_connection.php'; // Asegúrate de que este archivo existe y tiene la conexión correcta
require_once 'send_email.php';
require_once '../../vendor/autoload.php'; // Asegúrate de que la ruta sea correcta

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $Nombres = $_POST['Nombres'] ?? '';
    $apellidos = $_POST['apellidos'] ?? '';
    $TipoIdentificacion = $_POST['TipoIdentificacion'] ?? '';
    $idUsuario = $_POST['docNumber'] ?? ''; // Usar el número de documento como idUsuario
    $Telefono = $_POST['Telefono'] ?? '';
    $email = $_POST['email'] ?? '';
    $Direccion = $_POST['Direccion'] ?? '';
    $descripcion = $_POST['descripcion'] ?? '';
    $categoria_id = 1; // Alumbrado público por defecto

    if (empty($Nombres) || empty($email) || empty($descripcion)) {
        die("Error: Todos los campos obligatorios deben estar llenos");
    }

    // Subir las fotos
    $foto_urls = [];
    $attachments = [];
    if (isset($_FILES['photos'])) {
        foreach ($_FILES['photos']['tmp_name'] as $key => $tmp_name) {
            if ($_FILES['photos']['error'][$key] == UPLOAD_ERR_OK) {
                $foto_tmp = $tmp_name;
                $foto_name = basename($_FILES['photos']['name'][$key]);
                $foto_dir = '../../ImgSubidas/' . $foto_name;
                if (move_uploaded_file($foto_tmp, $foto_dir)) {
                    $foto_urls[] = $foto_dir;
                    $attachments[] = $foto_dir;
                }
            }
        }
    }

    // Convertir las rutas de las fotos a una cadena separada por comas
    $foto_urls_str = implode(',', $foto_urls);

    // Obtener la instancia de la base de datos
    $conn = Database::getInstance()->getConnection();

    // Insertar usuario si no existe
    $stmt = $conn->prepare("INSERT INTO usuario (idUsuario, TipoIdentificacion, Nombres, Apellidos, Telefono, Direccion, Correo) VALUES (?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE TipoIdentificacion=VALUES(TipoIdentificacion), Nombres=VALUES(Nombres), Apellidos=VALUES(Apellidos), Telefono=VALUES(Telefono), Direccion=VALUES(Direccion), Correo=VALUES(Correo)");
    $stmt->bind_param("issssss", $idUsuario, $TipoIdentificacion, $Nombres, $apellidos, $Telefono, $Direccion, $email);
    if (!$stmt->execute()) {
        echo "Error al insertar el usuario: " . $stmt->error;
        $stmt->close();
        $conn->close();
        exit();
    }
    $stmt->close();

    // Verificar si el usuario se insertó correctamente
    $stmt = $conn->prepare("SELECT idUsuario FROM usuario WHERE idUsuario = ?");
    $stmt->bind_param("i", $idUsuario);
    $stmt->execute();
    $stmt->store_result();

    if ($stmt->num_rows > 0) {
        // Insertar reporte
        $stmt = $conn->prepare("INSERT INTO reportes (usuario_id, categoria_id, descripcion, Direccion, foto_url) VALUES (?, ?, ?, ?, ?)");
        $stmt->bind_param("iisss", $idUsuario, $categoria_id, $descripcion, $Direccion, $foto_urls_str);

        if ($stmt->execute()) {
            // Crear el cuerpo del correo con todos los datos del reporte
            $message = "
                <h2>Nuevo Reporte de Alumbrado Público</h2>
                <p><strong>Nombres:</strong> $Nombres</p>
                <p><strong>Apellidos:</strong> $apellidos</p>
                <p><strong>Tipo de Documento:</strong> $TipoIdentificacion</p>
                <p><strong>Número de Documento:</strong> $idUsuario</p>
                <p><strong>Email:</strong> $email</p>
                <p><strong>Teléfono:</strong> $Telefono</p>
                <p><strong>Dirección:</strong> $Direccion</p>
                <p><strong>Descripción:</strong> $descripcion</p>
                <p><strong>Foto URLs:</strong> $foto_urls_str</p>
            ";

            // Enviar correos
            send_email("alumbradopublico@muninuevochimbote.gob.pe", "Nuevo reporte de deficiencia en alumbrado público", $message, $attachments);
            // Redirigir a la página de confirmación
            header("Location: ../../confirmacion/confirmacion.php");
            exit();
        } else {
            echo "Error al guardar el reporte: " . $stmt->error;
        }
        $stmt->close();
    } else {
        echo "Error: No se pudo encontrar el usuario.";
        $stmt->close();
    }
    $conn->close();
} else {
    echo "Método no permitido.";
}
?>

================================================
File: forms/alumbrado/send_email.php
================================================
<?php
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

require '../../vendor/autoload.php'; // Asegúrate de que la ruta sea correcta

if (!function_exists('send_email')) {
    // Esta función envía un correo electrónico de confirmación después de recibir un reporte
    function send_email($to, $subject, $message, $attachments = [])
    {
        $mail = new PHPMailer(true);

        try {
            // Configuración del servidor SMTP
            $mail->isSMTP();
            $mail->Host = 'mail.muninuevochimbote.gob.pe'; // Servidor SMTP
            $mail->SMTPAuth = true;
            $mail->Username = 'alumbradopublico@muninuevochimbote.gob.pe'; // Correo de autenticación
            $mail->Password = 'MDNCH*2025'; // Contraseña
            $mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS; // Usar SSL
            $mail->Port = 465; // Puerto SMTP con SSL

            // Configuración del correo
            $mail->CharSet = 'UTF-8'; // Establecer la codificación de caracteres a UTF-8
            $mail->Encoding = 'base64'; // Establecer la codificación del contenido a base64
            $mail->setFrom('alumbradopublico@muninuevochimbote.gob.pe', 'Problemas de alumbrado público');
            $mail->addAddress($to); // Correo destinatario
            $mail->Subject = $subject; // Asunto del correo
            $mail->Body = $message; // Cuerpo del mensaje
            $mail->isHTML(true); // Establecer el formato del correo a HTML

            // Adjuntar las imágenes si existen
            if (!empty($attachments)) {
                foreach ($attachments as $attachment) {
                    $mail->addAttachment($attachment);
                }
            }

            // Enviar el correo
            $mail->send();
            return true;
        } catch (Exception $e) {
            echo "Error al enviar el correo: {$mail->ErrorInfo}";
            return false;
        }
    }
}
?>

================================================
File: forms/alumbrado/ubicacion.js
================================================
document.getElementById("Direccion").addEventListener("input", function () {
    const query = this.value;
    if (query.length > 2) {
      fetch(
        `https://nominatim.openstreetmap.org/search?format=json&countrycodes=PE&viewbox=-78.55,-9.05,-78.45,-9.15&q=${query}`
      )
        .then((response) => response.json())
        .then((data) => {
          const suggestions = document.getElementById("suggestions");
          suggestions.innerHTML = "";
          data.forEach((item) => {
            const li = document.createElement("li");
            li.classList.add("list-group-item");
            li.textContent = item.display_name;
            li.addEventListener("click", function () {
              document.getElementById("Direccion").value = item.display_name;
              suggestions.innerHTML = "";
            });
            suggestions.appendChild(li);
          });
        });
    }
  });

================================================
File: forms/baches/baches.php
================================================
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reporte de Baches</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <!-- Material Icons -->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined" rel="stylesheet">
  <!-- Roboto Condensed -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@400;700&display=swap" rel="stylesheet">
  <!-- Custom CSS -->
  <link rel="stylesheet" href="estilo.css">
</head>

<body>
  <div class="container mt-5">
    <!-- Barra de progreso -->
    <div class="progress-container mb-4">
      <div class="progress">
        <div class="progress-bar bg-success progress-bar-striped progress-bar-animated" id="progressBar"
          style="width: 33%;"></div>
      </div>
      <div class="d-flex justify-content-between mt-2">
        <span class="text-success fw-bold">Paso 1</span>
        <span class="fw-bold">Paso 2</span>
        <span class="fw-bold">Paso 3</span>
      </div>
    </div>

    <!-- Formulario -->
    <form id="multiStepForm" class="card shadow-sm p-4" action="process_report_baches.php" method="POST"
      enctype="multipart/form-data">
      <!-- Paso 1: Registro de Usuario -->
      <div class="form-step active">
        <h2 class="text-center mb-4">Registro de Usuario</h2>
        <div class="row gy-3">
          <div class="col-md-6">
            <label for="Nombres" class="form-label"><i class="fa-solid fa-user"></i> Nombres</label>
            <input type="text" id="Nombres" name="Nombres" class="form-control" placeholder="Tu nombre" required>
          </div>
          <div class="col-md-6">
            <label for="apellidos" class="form-label"><i class="fa-solid fa-user"></i> Apellidos</label>
            <input type="text" id="apellidos" name="apellidos" class="form-control" placeholder="Tus apellidos"
              required>
          </div>
          <div class="col-md-6">
            <label for="TipoIdentificacion" class="form-label"><i class="fa-solid fa-id-card"></i> Tipo de
              Documento</label>
            <select id="TipoIdentificacion" name="TipoIdentificacion" class="form-select" required>
              <option value="" disabled selected>Seleccionar</option>
              <option value="1">DNI</option>
              <option value="2">RUC</option>
            </select>
          </div>
          <div class="col-md-6">
            <label for="docNumber" class="form-label"><i class="fa-solid fa-id-badge"></i> Número de Documento</label>
            <input type="text" id="docNumber" name="docNumber" class="form-control" placeholder="Número de documento"
              required>
          </div>
          <div class="col-md-6">
            <label for="Telefono" class="form-label"><i class="fa-solid fa-phone"></i> Teléfono</label>
            <input type="tel" id="Telefono" name="Telefono" class="form-control" placeholder="Número de teléfono"
              required>
          </div>
          <div class="col-md-6">
            <label for="email" class="form-label"><i class="fa-solid fa-envelope"></i> Correo Electrónico</label>
            <input type="email" id="email" name="email" class="form-control" placeholder="Correo electrónico" required>
          </div>
        </div>
        <div class="text-center mt-4">
          <button type="button" class="btn btn-success next-btn">Siguiente</button>
        </div>
      </div>

      <!-- Paso 2: Reporte de Baches -->
      <div class="form-step">
        <h2 class="text-center mb-4">Reporte de Baches</h2>
        <div class="bache-section">
          <div class="report-info">

            <span class="roboto-condensed-bold"><i class="fa-solid fa-triangle-exclamation"></i>
              DATOS DEL REPORTE
            </span>
          </div>
          <div class="flex-grow-1">
            <div class="mb-3">
              <label for="bacheType" class="form-label"><i class="fa-solid fa-road"></i>¿Vía de transporte
                público?</label>
              <select id="bacheType" name="bacheType" class="form-select" required>
                <option value="" disabled selected>Seleccionar</option>
                <option value="Si">Si</option>
                <option value="No">No</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="Direccion" class="form-label"><i class="fa-solid fa-map-marker-alt"></i> Ubicación</label>
              <input type="text" id="Direccion" name="Direccion" class="form-control"
                placeholder="Dirección o referencia" required>
              <ul id="suggestions" class="list-group"></ul>
            </div>
            <div class="mb-3">
              <label for="monthsPresent" class="form-label"><i class="fa-solid fa-calendar-alt"></i> Tiempo de
                aparición</label>
              <select id="monthsPresent" name="monthsPresent" class="form-select" required>
                <option value="" disabled selected>Seleccionar</option>
                <option value="0-1 año">0 a 1 año</option>
                <option value="1-2 años">1 a 2 años</option>
                <option value="2+ años">Mas de 2 años</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="descripcion" class="form-label"><i class="fa-solid fa-file-alt"></i> Descripción</label>
              <textarea id="descripcion" name="descripcion" class="form-control"
                placeholder="Describe el tamaño del bache, si afecta el tráfico y da mas detalles de la ubicación"
                rows="4" required></textarea>
            </div>
            <div class="mb-3">
              <label for="photo" class="form-label"><i class="fa-solid fa-camera"></i> Subir Foto del Bache</label>
              <input type="file" id="photo" name="photo" class="form-control" accept="image/*">
            </div>
          </div>
        </div>
        <div class="d-flex justify-content-between mt-4">
          <button type="button" class="btn btn-secondary prev-btn">Anterior</button>
          <button type="button" class="btn btn-success next-btn">Siguiente</button>
        </div>
      </div>

      <!-- Paso 3: Confirmar Envío -->
      <div class="form-step">
        <h2 class="text-center mb-4">Confirmar Envío</h2>
        <p class="text-center">Revisa los datos antes de enviar:</p>
        <ul class="list-group mb-4">
          <li class="list-group-item"><strong>Nombres:</strong> <span id="summary-name"></span></li>
          <li class="list-group-item"><strong>Apellidos:</strong> <span id="summary-lastname"></span></li>
          <li class="list-group-item"><strong>Documento:</strong> <span id="summary-docNumber"></span></li>
          <li class="list-group-item"><strong>Teléfono:</strong> <span id="summary-phone"></span></li>
          <li class="list-group-item"><strong>Correo:</strong> <span id="summary-email"></span></li>
          <li class="list-group-item"><strong>Reporte:</strong> <span id="summary-report"></span></li>
        </ul>
        <div class="d-flex justify-content-between">
          <button type="button" class="btn btn-secondary prev-btn">Anterior</button>
          <button type="submit" class="btn btn-success">Enviar</button>
        </div>
      </div>
    </form>
  </div>

  <script>
    document.getElementById('multiStepForm').addEventListener('submit', function () {
      // Perform form submission logic here
      window.location.href = '../../templates/CVVDF.php';
    });
  </script>

  <!-- Bootstrap JS -->
  <script src="ga.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const nextBtns = document.querySelectorAll('.next-btn');
      const prevBtns = document.querySelectorAll('.prev-btn');
      const formSteps = document.querySelectorAll('.form-step');
      let formStepIndex = 0;

      nextBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          formStepIndex++;
          updateFormSteps();
          updateProgressBar();
          if (formStepIndex === 2) {
            updateSummary();
          }
        });
      });

      prevBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          formStepIndex--;
          updateFormSteps();
          updateProgressBar();
        });
      });

      function updateFormSteps() {
        formSteps.forEach((formStep, index) => {
          formStep.classList.toggle('active', index === formStepIndex);
        });
      }

      function updateProgressBar() {
        const progressBar = document.getElementById('progressBar');
        progressBar.style.width = `${(formStepIndex + 1) * 33}%`;
      }

      function updateSummary() {
        document.getElementById('summary-name').textContent = document.getElementById('Nombres').value;
        document.getElementById('summary-lastname').textContent = document.getElementById('apellidos').value;
        document.getElementById('summary-docNumber').textContent = `${document.getElementById('docNumber').value} ${document.getElementById('TipoIdentificacion').value}`;
        document.getElementById('summary-phone').textContent = document.getElementById('Telefono').value;
        document.getElementById('summary-email').textContent = document.getElementById('email').value;
        document.getElementById('summary-report').textContent = document.getElementById('descripcion').value;
      }
    });
  </script>
</body>

</html>
<script src="ubicacion.js"></script>

================================================
File: forms/baches/estilo.css
================================================
body {
  height: 100%;
  margin: 0;
  padding: 0;
  background: linear-gradient(to bottom, #87ceeb 50%, #f5f5dc 100%);
  background-attachment: fixed;
  font-family: "Roboto Condensed", serif; /* Aplica la fuente a todo el cuerpo */
}

.container {
  max-width: 700px;
  margin: 50px auto;
  background: #ffffff;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

.progress-container .progress {
  height: 8px;
  border-radius: 50px;
}

.progress-bar {
  border-radius: 50px;
  transition: width 0.4s ease;
}

.form-step {
  display: none;
}

.form-step.active {
  display: block;
}

.bache-section {
  display: flex;
  align-items: center;
  gap: 20px;
}

.bache-section .bache-image {
  width: 40%;
  height: auto;
  border-radius: 10px;
}

.bache-section img {
  width: 100%;
  height: 450px;
  border-radius: 10px;
}

.report-info {
  width: 235px; /* Ajusta el ancho del contenedor */
  height: 450px; /* Ajusta la altura del contenedor */
  background-color: #87ceeb; /* Ajusta el color de fondo */
  display: flex;
  justify-content: flex-start; /* Alinea el contenido a la izquierda */
  align-items: center; /* Centra el contenido verticalmente */
  border-radius: 10px; /* Añade bordes redondeados */
  padding-left: 20px; /* Añade un poco de padding a la izquierda */
  border: 2px solid #A4A4A4; /* Añade un borde */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Añade una sombra */
}

.report-info span {
  color: white;
  font-weight: bold;
  font-size: 1.5em;
  text-align: left; /* Alinea el texto a la izquierda */
}

.roboto-condensed-bold {
  font-family: "Roboto Condensed", serif;
  font-optical-sizing: auto;
  font-weight: 700; /* Puedes ajustar el peso según tus necesidades */
  font-style: normal;
}

/* Estilo para las opciones del formulario */
select option {
  color: #A4A4A4;
}

/* Estilo para las respuestas del formulario */
input, select, textarea {
  color: #A4A4A4;
}

================================================
File: forms/baches/ga.js
================================================
const steps = document.querySelectorAll(".form-step");
const progressBar = document.getElementById("progressBar");
let currentStep = 0;

// Botones "Siguiente"
document.querySelectorAll(".next-btn").forEach((btn) => {
  btn.addEventListener("click", () => {
    if (currentStep < steps.length - 1) {
      steps[currentStep].classList.remove("active");
      currentStep++;
      steps[currentStep].classList.add("active");
      updateProgressBar();
    }
  });
});

// Botones "Anterior"
document.querySelectorAll(".prev-btn").forEach((btn) => {
  btn.addEventListener("click", () => {
    if (currentStep > 0) {
      steps[currentStep].classList.remove("active");
      currentStep--;
      steps[currentStep].classList.add("active");
      updateProgressBar();
    }
  });
});

function updateProgressBar() {
  const progress = ((currentStep + 1) / steps.length) * 100;
  progressBar.style.width = `${progress}%`;
}


================================================
File: forms/baches/process_report_baches.php
================================================
<?php
require_once '../../data/db_connection.php'; // Asegúrate de que este archivo existe y tiene la conexión correcta
require_once 'send_email.php';
require_once '../../vendor/autoload.php'; // Asegúrate de que la ruta sea correcta
require_once '../../upload_image.php'; // Asegúrate de que este archivo existe y tiene la conexión correcta

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $Nombres = $_POST['Nombres'] ?? '';
    $apellidos = $_POST['apellidos'] ?? '';
    $TipoIdentificacion = $_POST['TipoIdentificacion'] ?? '';
    $idUsuario = $_POST['docNumber'] ?? ''; // Usar el número de documento como idUsuario
    $Telefono = $_POST['Telefono'] ?? '';
    $email = $_POST['email'] ?? '';
    $Direccion = $_POST['Direccion'] ?? '';
    $descripcion = $_POST['descripcion'] ?? '';
    $categoria_id = 4; // Baches por defecto

    if (empty($Nombres) || empty($email) || empty($descripcion)) {
        die("Error: Todos los campos obligatorios deben estar llenos");
    }

    // Subir la foto
    $foto_url = null;
    if (isset($_FILES['photo']) && $_FILES['photo']['error'] == UPLOAD_ERR_OK) {
        $foto_tmp = $_FILES['photo']['tmp_name'];
        $foto_name = basename($_FILES['photo']['name']);
        $foto_dir = '../../ImgSubidas/' . $foto_name;
        if (move_uploaded_file($foto_tmp, $foto_dir)) {
            $foto_url = $foto_dir;
        }
    }

    // Obtener la instancia de la base de datos
    $conn = Database::getInstance()->getConnection();

    // Insertar usuario si no existe
    $stmt = $conn->prepare("INSERT INTO usuario (idUsuario, TipoIdentificacion, Nombres, Apellidos, Telefono, Direccion, Correo) VALUES (?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE TipoIdentificacion=VALUES(TipoIdentificacion), Nombres=VALUES(Nombres), Apellidos=VALUES(Apellidos), Telefono=VALUES(Telefono), Direccion=VALUES(Direccion), Correo=VALUES(Correo)");
    $stmt->bind_param("issssss", $idUsuario, $TipoIdentificacion, $Nombres, $apellidos, $Telefono, $Direccion, $email);
    if (!$stmt->execute()) {
        echo "Error al insertar el usuario: " . $stmt->error;
        $stmt->close();
        $conn->close();
        exit();
    }
    $stmt->close();

    // Verificar si el usuario se insertó correctamente
    $stmt = $conn->prepare("SELECT idUsuario FROM usuario WHERE idUsuario = ?");
    $stmt->bind_param("i", $idUsuario);
    $stmt->execute();
    $stmt->store_result();

    if ($stmt->num_rows > 0) {
        // Insertar reporte
        $stmt = $conn->prepare("INSERT INTO reportes (usuario_id, categoria_id, descripcion, Direccion, foto_url) VALUES (?, ?, ?, ?, ?)");
        $stmt->bind_param("iisss", $idUsuario, $categoria_id, $descripcion, $Direccion, $foto_url);

        if ($stmt->execute()) {
            // Crear el cuerpo del correo con todos los datos del reporte
            $message = "
                <h2>Nuevo Reporte de Baches</h2>
                <p><strong>Nombres:</strong> $Nombres</p>
                <p><strong>Apellidos:</strong> $apellidos</p>
                <p><strong>Tipo de Documento:</strong> $TipoIdentificacion</p>
                <p><strong>Número de Documento:</strong> $idUsuario</p>
                <p><strong>Email:</strong> $email</p>
                <p><strong>Teléfono:</strong> $Telefono</p>
                <p><strong>Dirección:</strong> $Direccion</p>
                <p><strong>Descripción:</strong> $descripcion</p>
                <p><strong>Foto URL:</strong> $foto_url</p>
            ";

            // Enviar correos
            send_email("huecos@muninuevochimbote.gob.pe", "Nuevo reporte de baches", $message, [$foto_url]);
            // Redirigir a la página de confirmación
            header("Location: ../../confirmacion/confirmacion.php");
            exit();
        } else {
            echo "Error al guardar el reporte: " . $stmt->error;
        }
        $stmt->close();
    } else {
        echo "Error: No se pudo encontrar el usuario.";
        $stmt->close();
    }
    $conn->close();
} else {
    echo "Método no permitido.";
}
?>

================================================
File: forms/baches/send_email.php
================================================
<?php
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

require '../../vendor/autoload.php'; // Asegúrate de que la ruta sea correcta

if (!function_exists('send_email')) {
    // Esta función envía un correo electrónico de confirmación después de recibir un reporte
    function send_email($to, $subject, $message, $attachment = null)
    {
        $mail = new PHPMailer(true);

        try {
            // Configuración del servidor SMTP
            $mail->isSMTP();
            $mail->Host = 'mail.muninuevochimbote.gob.pe'; // Servidor SMTP
            $mail->SMTPAuth = true;
            $mail->Username = 'huecos@muninuevochimbote.gob.pe'; // Correo de autenticación
            $mail->Password = 'MDNCH*2025'; // Contraseña
            $mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS; // Usar SSL
            $mail->Port = 465; // Puerto SMTP con SSL

            // Configuración del correo
            $mail->CharSet = 'UTF-8'; // Establecer la codificación de caracteres a UTF-8
            $mail->Encoding = 'base64'; // Establecer la codificación del contenido a base64
            $mail->setFrom('huecos@muninuevochimbote.gob.pe', 'Daño en la calle publica');
            $mail->addAddress($to); // Correo destinatario
            $mail->Subject = $subject;
            $mail->Body = $message;
            $mail->isHTML(true); // Establecer el formato del correo a HTML

            // Adjuntar la imagen si existe
            if ($attachment) {
                $mail->addAttachment($attachment);
            }

            // Enviar el correo
            $mail->send();
            return true;
        } catch (Exception $e) {
            echo "Error al enviar el correo: {$mail->ErrorInfo}";
            return false;
        }
    }
}
?>

================================================
File: forms/baches/ubicacion.js
================================================
document.getElementById("Direccion").addEventListener("input", function () {
    const query = this.value;
    if (query.length > 2) {
      fetch(
        `https://nominatim.openstreetmap.org/search?format=json&countrycodes=PE&viewbox=-78.55,-9.05,-78.45,-9.15&q=${query}`
      )
        .then((response) => response.json())
        .then((data) => {
          const suggestions = document.getElementById("suggestions");
          suggestions.innerHTML = "";
          data.forEach((item) => {
            const li = document.createElement("li");
            li.classList.add("list-group-item");
            li.textContent = item.display_name;
            li.addEventListener("click", function () {
              document.getElementById("Direccion").value = item.display_name;
              suggestions.innerHTML = "";
            });
            suggestions.appendChild(li);
          });
        });
    }
  });

================================================
File: forms/espaciosPublicos/espacio.php
================================================
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reporte de Espacios Públicos</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <!-- Material Icons -->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined" rel="stylesheet">
  <!-- Roboto Condensed -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@400;700&display=swap" rel="stylesheet">
  <!-- Custom CSS -->
  <link rel="stylesheet" href="esti.css">
</head>

<body>
  <div class="container mt-5">
    <!-- Barra de progreso -->
    <div class="progress-container mb-4">
      <div class="progress">
        <div class="progress-bar bg-success progress-bar-striped progress-bar-animated" id="progressBar"
          style="width: 33%;"></div>
      </div>
      <div class="d-flex justify-content-between mt-2">
        <span class="text-success fw-bold">Paso 1</span>
        <span class="fw-bold">Paso 2</span>
        <span class="fw-bold">Paso 3</span>
      </div>
    </div>



    <!-- Formulario -->
    <form id="multiStepForm" class="card shadow-sm p-4" action="process_report_espacio.php" method="POST"
      enctype="multipart/form-data">
      <!-- Paso 1: Registro de Usuario -->
      <div class="form-step active">
        <h2 class="text-center mb-4">Registro de Usuario</h2>
        <div class="row gy-3">
          <div class="col-md-6">
            <label for="Nombres" class="form-label"><i class="fa-solid fa-user"></i> Nombres</label>
            <input type="text" id="Nombres" name="Nombres" class="form-control" placeholder="Tu nombre" required>
          </div>
          <div class="col-md-6">
            <label for="apellidos" class="form-label"><i class="fa-solid fa-user"></i> Apellidos</label>
            <input type="text" id="apellidos" name="apellidos" class="form-control" placeholder="Tus apellidos"
              required>
          </div>
          <div class="col-md-6">
            <label for="TipoIdentificacion" class="form-label"><i class="fa-solid fa-id-card"></i> Tipo de
              Documento</label>
            <select id="TipoIdentificacion" name="TipoIdentificacion" class="form-select" required>
              <option value="" disabled selected>Seleccionar</option>
              <option value="1">DNI</option>
              <option value="2">RUC</option>
            </select>
          </div>
          <div class="col-md-6">
            <label for="docNumber" class="form-label"><i class="fa-solid fa-id-badge"></i> Número de Documento</label>
            <input type="text" id="docNumber" name="docNumber" class="form-control" placeholder="Número de documento"
              required>
          </div>
          <div class="col-md-6">
            <label for="Telefono" class="form-label"><i class="fa-solid fa-phone"></i> Teléfono</label>
            <input type="tel" id="Telefono" name="Telefono" class="form-control" placeholder="Número de teléfono"
              required>
          </div>
          <div class="col-md-6">
            <label for="email" class="form-label"><i class="fa-solid fa-envelope"></i> Correo Electrónico</label>
            <input type="email" id="email" name="email" class="form-control" placeholder="Correo electrónico" required>
          </div>
        </div>
        <div class="text-center mt-4">
          <button type="button" class="btn btn-success next-btn">Siguiente</button>
        </div>
      </div>

      <!-- Paso 2: Reporte de Espacios Públicos -->
      <div class="form-step">
        <h2 class="text-center mb-4">Reporte de incidencias en el Espacio Público</h2>
        <div class="bache-section">
          <div class="report-info">
            <span class="roboto-condensed-bold"><i class="fa-solid fa-triangle-exclamation"></i>
              DATOS DEL REPORTE
            </span>
          </div>
          <div class="flex-grow-1">
            <div class="mb-3">
              <label for="spaceType" class="form-label"><i class="fa-solid fa-tree"></i> Tipo de Espacio</label>
              <select id="spaceType" name="spaceType" class="form-select" required>
                <option value="" disabled selected>Seleccionar</option>
                <option value="parque">Parque</option>
                <option value="plaza">Plaza</option>
                <option value="zona_recreativa">Zona Recreativa</option>
                <option value="otro">Otro</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="issueType" class="form-label"><i class="fa-solid fa-exclamation-circle"></i> Tipo de
                Problema</label>
              <select id="issueType" name="issueType" class="form-select" required>
                <option value="" disabled selected>Seleccionar</option>
                <option value="basura">Presencia de Basura</option>
                <option value="daño">Daños en Infraestructura</option>
                <option value="trafico">Tráfico de drogas/armas</option>
                <option value="robos">Robos (en general)</option>
                <option value="otro">Otro</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="Direccion" class="form-label"><i class="fa-solid fa-map-marker-alt"></i> Ubicación</label>
              <input type="text" id="Direccion" name="Direccion" class="form-control"
                placeholder="Dirección o referencia" required>
              <ul id="suggestions" class="list-group"></ul>
            </div>
            <div class="mb-3">
              <label for="descripcion" class="form-label"><i class="fa-solid fa-file-alt"></i> Descripción</label>
              <textarea id="descripcion" name="descripcion" class="form-control"
                placeholder="Describe el problema en detalle y su ubicación" rows="4" required></textarea>
            </div>
            <div class="mb-3">
              <label for="photo" class="form-label"><i class="fa-solid fa-camera"></i> Subir Foto del Problema</label>
              <input type="file" id="photo" name="photo" class="form-control" accept="image/*">
            </div>
          </div>
        </div>
        <div class="d-flex justify-content-between mt-4">
          <button type="button" class="btn btn-secondary prev-btn">Anterior</button>
          <button type="button" class="btn btn-success next-btn">Siguiente</button>
        </div>
      </div>

      <!-- Paso 3: Confirmar Envío -->
      <div class="form-step">
        <h2 class="text-center mb-4">Confirmar Envío</h2>
        <p class="text-center">Revisa los datos antes de enviar:</p>
        <ul class="list-group mb-4">
          <li class="list-group-item"><strong>Nombres:</strong> <span id="summary-name"></span></li>
          <li class="list-group-item"><strong>Apellidos:</strong> <span id="summary-lastname"></span></li>
          <li class="list-group-item"><strong>Documento:</strong> <span id="summary-docNumber"></span></li>
          <li class="list-group-item"><strong>Teléfono:</strong> <span id="summary-Telefono"></span></li>
          <li class="list-group-item"><strong>Correo:</strong> <span id="summary-email"></span></li>
          <li class="list-group-item"><strong>Reporte:</strong> <span id="summary-report"></span></li>
        </ul>
        <div class="d-flex justify-content-between">
          <button type="button" class="btn btn-secondary prev-btn">Anterior</button>
          <button type="submit" class="btn btn-success">Enviar</button>
        </div>
      </div>
    </form>
  </div>

  <script>
    document.getElementById('multiStepForm').addEventListener('submit', function () {
      // Perform form submission logic here
      window.location.href = '../../templates/CVVDF.php';
    });
  </script>

  <!-- Bootstrap JS -->
  <script src="ga.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const nextBtns = document.querySelectorAll('.next-btn');
      const prevBtns = document.querySelectorAll('.prev-btn');
      const formSteps = document.querySelectorAll('.form-step');
      let formStepIndex = 0;

      nextBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          formStepIndex++;
          updateFormSteps();
          updateProgressBar();
          if (formStepIndex === 2) {
            updateSummary();
          }
        });
      });

      prevBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          formStepIndex--;
          updateFormSteps();
          updateProgressBar();
        });
      });

      function updateFormSteps() {
        formSteps.forEach((formStep, index) => {
          formStep.classList.toggle('active', index === formStepIndex);
        });
      }

      function updateProgressBar() {
        const progressBar = document.getElementById('progressBar');
        progressBar.style.width = `${(formStepIndex + 1) * 33}%`;
      }

      function updateSummary() {
        document.getElementById('summary-name').textContent = document.getElementById('Nombres').value;
        document.getElementById('summary-lastname').textContent = document.getElementById('apellidos').value;
        document.getElementById('summary-docNumber').textContent = `${document.getElementById('docNumber').value} ${document.getElementById('TipoIdentificacion').value}`;
        document.getElementById('summary-Telefono').textContent = document.getElementById('Telefono').value;
        document.getElementById('summary-email').textContent = document.getElementById('email').value;
        document.getElementById('summary-report').textContent = document.getElementById('descripcion').value;
      }
    });
  </script>
</body>

</html>
<script src="ubicacion.js"></script>

================================================
File: forms/espaciosPublicos/esti.css
================================================
body {
  height: 100%;
  margin: 0;
  padding: 0;
  background: linear-gradient(to bottom, rgb(108, 255, 129) 0%, rgb(85, 200, 87) 35%, rgb(69, 162, 71) 60%, rgb(53, 124, 55) 100%);
  background-attachment: fixed;
  font-family: "Roboto Condensed", serif; /* Aplica la fuente a todo el cuerpo */
}

.container {
  max-width: 700px;
  margin: 50px auto;
  background: #ffffff;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

.progress-container .progress {
  height: 8px;
  border-radius: 50px;
}

.progress-bar {
  border-radius: 50px;
  transition: width 0.4s ease;
}

.form-step {
  display: none;
}

.form-step.active {
  display: block;
}

.bache-section {
  display: flex;
  align-items: center;
  gap: 20px;
}

.bache-section .public-space-image {
  width: 40%;
  height: auto;
  border-radius: 10px;
}

.public-space-image img {
  width: 100%;
  height: 450px;
  border-radius: 10px;
}

.report-info {
  width: 235px;
  height: 450px;
  background-color: #4caf50; /* Ajusta el color de fondo */
  display: flex;
  justify-content: flex-start; /* Alinea el contenido a la izquierda */
  align-items: center; /* Centra el contenido verticalmente */
  border-radius: 10px; /* Añade bordes redondeados */
  padding-left: 20px; /* Añade un poco de padding a la izquierda */
  border: 2px solid #A4A4A4; /* Añade un borde */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Añade una sombra */
}

.report-info span {
  color: white;
  font-weight: bold;
  font-size: 1.5em;
  text-align: left; /* Alinea el texto a la izquierda */
}

.roboto-condensed-bold {
  font-family: "Roboto Condensed", serif;
  font-optical-sizing: auto;
  font-weight: 700; /* Puedes ajustar el peso según tus necesidades */
  font-style: normal;
}

/* Estilo para las opciones del formulario */
select option {
  color: #A4A4A4;
}

/* Estilo para las respuestas del formulario */
input, select, textarea {
  color: #A4A4A4;
}

================================================
File: forms/espaciosPublicos/ga.js
================================================
const steps = document.querySelectorAll(".form-step");
const progressBar = document.getElementById("progressBar");
let currentStep = 0;

// Botones "Siguiente"
document.querySelectorAll(".next-btn").forEach((btn) => {
  btn.addEventListener("click", () => {
    if (currentStep < steps.length - 1) {
      steps[currentStep].classList.remove("active");
      currentStep++;
      steps[currentStep].classList.add("active");
      updateProgressBar();
    }
  });
});

// Botones "Anterior"
document.querySelectorAll(".prev-btn").forEach((btn) => {
  btn.addEventListener("click", () => {
    if (currentStep > 0) {
      steps[currentStep].classList.remove("active");
      currentStep--;
      steps[currentStep].classList.add("active");
      updateProgressBar();
    }
  });
});

function updateProgressBar() {
  const progress = ((currentStep + 1) / steps.length) * 100;
  progressBar.style.width = `${progress}%`;
}


================================================
File: forms/espaciosPublicos/process_report_espacio.php
================================================
<?php
require_once '../../data/db_connection.php'; // Asegúrate de que este archivo existe y tiene la conexión correcta
require_once 'send_email.php';
require_once '../../vendor/autoload.php'; // Asegúrate de que la ruta sea correcta
require_once '../../upload_image.php'; // Asegúrate de que este archivo existe y tiene la conexión correcta

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $Nombres = $_POST['Nombres'] ?? '';
    $apellidos = $_POST['apellidos'] ?? '';
    $TipoIdentificacion = $_POST['TipoIdentificacion'] ?? '';
    $idUsuario = $_POST['docNumber'] ?? ''; // Usar el número de documento como idUsuario
    $Telefono = $_POST['Telefono'] ?? '';
    $email = $_POST['email'] ?? '';
    $Direccion = $_POST['Direccion'] ?? '';
    $descripcion = $_POST['descripcion'] ?? '';
    $categoria_id = 2; // Espacios Públicos por defecto

    if (empty($Nombres) || empty($email) || empty($descripcion)) {
        die("Error: Todos los campos obligatorios deben estar llenos");
    }

    // Subir la foto
    $foto_url = null;
    if (isset($_FILES['photo']) && $_FILES['photo']['error'] == UPLOAD_ERR_OK) {
        $foto_tmp = $_FILES['photo']['tmp_name'];
        $foto_name = basename($_FILES['photo']['name']);
        $foto_dir = '../../ImgSubidas/' . $foto_name;
        if (move_uploaded_file($foto_tmp, $foto_dir)) {
            $foto_url = $foto_dir;
        }
    }

    // Obtener la instancia de la base de datos
    $conn = Database::getInstance()->getConnection();

    // Insertar usuario si no existe
    $stmt = $conn->prepare("INSERT INTO usuario (idUsuario, TipoIdentificacion, Nombres, Apellidos, Telefono, Direccion, Correo) VALUES (?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE TipoIdentificacion=VALUES(TipoIdentificacion), Nombres=VALUES(Nombres), Apellidos=VALUES(Apellidos), Telefono=VALUES(Telefono), Direccion=VALUES(Direccion), Correo=VALUES(Correo)");
    $stmt->bind_param("issssss", $idUsuario, $TipoIdentificacion, $Nombres, $apellidos, $Telefono, $Direccion, $email);
    if (!$stmt->execute()) {
        echo "Error al insertar el usuario: " . $stmt->error;
        $stmt->close();
        $conn->close();
        exit();
    }
    $stmt->close();

    // Verificar si el usuario se insertó correctamente
    $stmt = $conn->prepare("SELECT idUsuario FROM usuario WHERE idUsuario = ?");
    $stmt->bind_param("i", $idUsuario);
    $stmt->execute();
    $stmt->store_result();

    if ($stmt->num_rows > 0) {
        // Insertar reporte
        $stmt = $conn->prepare("INSERT INTO reportes (usuario_id, categoria_id, descripcion, Direccion, foto_url) VALUES (?, ?, ?, ?, ?)");
        $stmt->bind_param("iisss", $idUsuario, $categoria_id, $descripcion, $Direccion, $foto_url);

        if ($stmt->execute()) {
            // Crear el cuerpo del correo con todos los datos del reporte
            $message = "
                <h2>Nuevo Reporte de Espacios Públicos</h2>
                <p><strong>Nombres:</strong> $Nombres</p>
                <p><strong>Apellidos:</strong> $apellidos</p>
                <p><strong>Tipo de Documento:</strong> $TipoIdentificacion</p>
                <p><strong>Número de Documento:</strong> $idUsuario</p>
                <p><strong>Email:</strong> $email</p>
                <p><strong>Teléfono:</strong> $Telefono</p>
                <p><strong>Dirección:</strong> $Direccion</p>
                <p><strong>Descripción:</strong> $descripcion</p>
                <p><strong>Foto URL:</strong> $foto_url</p>
            ";

            // Enviar correos
            send_email("espaciospublicos@muninuevochimbote.gob.pe", "Nuevo reporte de incidencias en el espacio público", $message, [$foto_url]);
            // Redirigir a la página de confirmación
            header("Location: ../../confirmacion/confirmacion.php");
            exit();
        } else {
            echo "Error al guardar el reporte: " . $stmt->error;
        }
        $stmt->close();
    } else {
        echo "Error: No se pudo encontrar el usuario.";
        $stmt->close();
    }
    $conn->close();
} else {
    echo "Método no permitido.";
}
?>

================================================
File: forms/espaciosPublicos/send_email.php
================================================
<?php
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

require '../../vendor/autoload.php'; // Asegúrate de que la ruta sea correcta

if (!function_exists('send_email')) {
    // Esta función envía un correo electrónico de confirmación después de recibir un reporte
    function send_email($to, $subject, $message, $attachment = null)
    {
        $mail = new PHPMailer(true);

        try {
            // Configuración del servidor SMTP
            $mail->isSMTP();
            $mail->Host = 'mail.muninuevochimbote.gob.pe'; // Servidor SMTP
            $mail->SMTPAuth = true;
            $mail->Username = 'espaciospublicos@muninuevochimbote.gob.pe'; // Correo de autenticación
            $mail->Password = 'MDNCH*2025'; // Contraseña
            $mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS; // Usar SSL
            $mail->Port = 465; // Puerto SMTP con SSL

            // Configuración del correo
            $mail->CharSet = 'UTF-8'; // Establecer la codificación de caracteres a UTF-8
            $mail->Encoding = 'base64'; // Establecer la codificación del contenido a base64
            $mail->setFrom('espaciospublicos@muninuevochimbote.gob.pe', 'Daño en parques y jardines públicos');
            $mail->addAddress($to); // Correo destinatario
            $mail->Subject = $subject;
            $mail->Body = $message;
            $mail->isHTML(true); // Establecer el formato del correo a HTML

            // Adjuntar la imagen si existe
            if ($attachment) {
                $mail->addAttachment($attachment);
            }

            // Enviar el correo
            $mail->send();
            return true;
        } catch (Exception $e) {
            echo "Error al enviar el correo: {$mail->ErrorInfo}";
            return false;
        }
    }
}
?>

================================================
File: forms/espaciosPublicos/ubicacion.js
================================================
document.getElementById("Direccion").addEventListener("input", function () {
    const query = this.value;
    if (query.length > 2) {
      fetch(
        `https://nominatim.openstreetmap.org/search?format=json&countrycodes=PE&viewbox=-78.55,-9.05,-78.45,-9.15&q=${query}`
      )
        .then((response) => response.json())
        .then((data) => {
          const suggestions = document.getElementById("suggestions");
          suggestions.innerHTML = "";
          data.forEach((item) => {
            const li = document.createElement("li");
            li.classList.add("list-group-item");
            li.textContent = item.display_name;
            li.addEventListener("click", function () {
              document.getElementById("Direccion").value = item.display_name;
              suggestions.innerHTML = "";
            });
            suggestions.appendChild(li);
          });
        });
    }
  });

================================================
File: incluides/header.php
================================================
<style>
    .navbar-text {
        display: flex;
        align-items: center;
    }

    .navbar-nav .nav-link {
        color: #000000;
        transition: background-color 0.3s ease;
        border-radius: 5px;
        /* Añadir bordes redondeados */
    }

    .navbar-nav .nav-link:hover {
        background-color: #FFC107;
        color: #000000;
        border-radius: 7px;
        /* Añadir bordes redondeados */
        font-family: "Raleway", serif;
    }

    .nav-item {
        margin-right: 10px;
        border-radius: 5px;
        /* Añadir bordes redondeados */
    }

    .header {

        display: grid;
        grid-template-columns: 80% 20%;
        position: relative;

        background-image: url('../images/HeaderPlazaMayor.png');
        background-size: cover;
        background-position: center;
    }

    .button-container {
        display: flex;
        background-color: rgba(0, 73, 144);
        width: 250px;
        height: 40px;
        align-items: center;
        justify-content: space-around;
        border-radius: 10px;
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px,
            rgba(0, 73, 144, 0.5) 5px 10px 15px;
        transition: all 0.5s;
    }

    .button-container:hover {
        width: 300px;
        transition: all 0.5s;
        transform: translateY(-3px);
    }

    .button {
        outline: 1 !important;
        border: 1 !important;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: transparent;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #fff;
        transition: all ease-in-out 0.3s;
        cursor: pointer;
    }

    .button:hover {
        transform: translateY(-3px);
    }

    .icon {
        font-size: 20px;
    }

    .header-right {}

    .header-left {
        background-color: #D1D1D1;
        clip-path: polygon(0 0, 80% 0, 70% 100%, 0% 100%);
    }
</style>
<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Header</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,100..900;1,100..900&family=Source+Sans+3:ital,wght@0,200..900;1,200..900&display=swap"
        rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>

<body>
    <header class="header">
        <div class="header-left">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <a class="navbar-img" href="#">
                    <img src="../images/logo.png" alt="Logo" width="180" height="50">
                </a>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link" href="#"><b>Quienes somos?</b></a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#"><b>Como tu opinion aporta?</b></a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#"><b>Dejar tu comentario</b></a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#"><b>Campañas</b></a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
        <div class="header-right"></div>
    </header>
    <!-- Resto del contenido de la página -->
</body>

</html>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
    integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
    crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
    integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
    crossorigin="anonymous"></script>

================================================
File: js/confirmacion.js
================================================
setTimeout(function() {
    window.location.href = "../templates/CVVDF.php";
}, 5000);

let index = 0;
const images = document.querySelectorAll(".image-container img");

function changeImage() {
    images.forEach(img => img.classList.remove("active"));
    images[index].classList.add("active");
    index = (index + 1) % images.length;
}

setInterval(changeImage, 3000);

================================================
File: pruebas/espacio.php
================================================
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reporte de Espacios Públicos</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <!-- Custom CSS -->
  <link rel="stylesheet" href="esti.css">
  <style>
    #chatbot {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 300px;
      max-height: 400px;
      overflow-y: auto;
      background: white;
      border: 1px solid #ccc;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      display: none;
    }

    #chatbot-header {
      background: #007bff;
      color: white;
      padding: 10px;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      display: flex;
      align-items: center;
    }

    #chatbot-header img {
      width: 30px;
      height: 30px;
      margin-right: 10px;
    }

    #chatbot-messages {
      padding: 10px;
    }

    #chatbot-input {
      display: flex;
      border-top: 1px solid #ccc;
    }

    #chatbot-input input {
      flex: 1;
      border: none;
      padding: 10px;
      border-bottom-left-radius: 10px;
    }

    #chatbot-input button {
      background: #007bff;
      color: white;
      border: none;
      padding: 10px;
      border-bottom-right-radius: 10px;
    }

    .chatbot-message {
      display: flex;
      align-items: flex-start;
      margin-bottom: 10px;
    }

    .chatbot-message img {
      width: 30px;
      height: 30px;
      margin-right: 10px;
    }

    .chatbot-message div {
      background: #f1f1f1;
      padding: 10px;
      border-radius: 10px;
    }

    .highlight {
      animation: highlight 1s infinite;
    }

    @keyframes highlight {
      0% { background-color: yellow; }
      50% { background-color: transparent; }
      100% { background-color: yellow; }
    }
  </style>
</head>

<body>
  <div class="container mt-5">
    <!-- Formulario -->
    <form id="multiStepForm" class="card shadow-sm p-4" action="process_report_espacio.php" method="POST" enctype="multipart/form-data">
      <!-- Paso 1: Registro de Usuario -->
      <div class="form-step active">
        <h2 class="text-center mb-4">Registro de Usuario</h2>
        <div class="row gy-3">
          <div class="col-md-6">
            <label for="Nombres" class="form-label"><i class="fa-solid fa-user"></i> Nombres</label>
            <input type="text" id="Nombres" name="Nombres" class="form-control" placeholder="Tu nombre" required>
          </div>
          <div class="col-md-6">
            <label for="apellidos" class="form-label"><i class="fa-solid fa-user"></i> Apellidos</label>
            <input type="text" id="apellidos" name="apellidos" class="form-control" placeholder="Tus apellidos" required>
          </div>
          <div class="col-md-6">
            <label for="TipoIdentificacion" class="form-label"><i class="fa-solid fa-id-card"></i> Tipo de Documento</label>
            <select id="TipoIdentificacion" name="TipoIdentificacion" class="form-select" required>
              <option value="" disabled selected>Seleccionar</option>
              <option value="1">DNI</option>
              <option value="2">RUC</option>
            </select>
          </div>
          <div class="col-md-6">
            <label for="docNumber" class="form-label"><i class="fa-solid fa-id-badge"></i> Número de Documento</label>
            <input type="text" id="docNumber" name="docNumber" class="form-control" placeholder="Número de documento" required>
          </div>
          <div class="col-md-6">
            <label for="Telefono" class="form-label"><i class="fa-solid fa-phone"></i> Teléfono</label>
            <input type="tel" id="Telefono" name="Telefono" class="form-control" placeholder="Número de teléfono" required>
          </div>
          <div class="col-md-6">
            <label for="email" class="form-label"><i class="fa-solid fa-envelope"></i> Correo Electrónico</label>
            <input type="email" id="email" name="email" class="form-control" placeholder="Correo electrónico" required>
          </div>
        </div>
        <div class="text-center mt-4">
          <button type="button" class="btn btn-success next-btn">Siguiente</button>
        </div>
      </div>

      <!-- Paso 2: Reporte de Espacios Públicos -->
      <div class="form-step">
        <h2 class="text-center mb-4">Reporte de incidencias en el Espacio Público</h2>
        <div class="bache-section">
          <div class="public-space-image">
            <img src="gaaa.gif" alt="Espacios públicos representativos" class="img-fluid rounded">
          </div>
          <div class="flex-grow-1">
            <div class="mb-3">
              <label for="spaceType" class="form-label"><i class="fa-solid fa-tree"></i> Tipo de Espacio</label>
              <select id="spaceType" name="spaceType" class="form-select" required>
                <option value="" disabled selected>Seleccionar</option>
                <option value="parque">Parque</option>
                <option value="plaza">Plaza</option>
                <option value="zona_recreativa">Zona Recreativa</option>
                <option value="otro">Otro</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="issueType" class="form-label"><i class="fa-solid fa-exclamation-circle"></i> Tipo de Problema</label>
              <select id="issueType" name="issueType" class="form-select" required>
                <option value="" disabled selected>Seleccionar</option>
                <option value="basura">Presencia de Basura</option>
                <option value="daño">Daños en Infraestructura</option>
                <option value="trafico">Tráfico de drogas/armas</option>
                <option value="robos">Robos (en general)</option>
                <option value="otro">Otro</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="Direccion" class="form-label"><i class="fa-solid fa-map-marker-alt"></i> Ubicación</label>
              <input type="text" id="Direccion" name="Direccion" class="form-control" placeholder="Dirección o referencia" required>
              <ul id="suggestions" class="list-group"></ul>
            </div>
            <div class="mb-3">
              <label for="descripcion" class="form-label"><i class="fa-solid fa-file-alt"></i> Descripción</label>
              <textarea id="descripcion" name="descripcion" class="form-control" placeholder="Describe el problema en detalle y su ubicación" rows="4" required></textarea>
            </div>
            <div class="mb-3">
              <label for="photo" class="form-label"><i class="fa-solid fa-camera"></i> Subir Foto del Problema</label>
              <input type="file" id="photo" name="photo" class="form-control" accept="image/*">
            </div>
          </div>
        </div>
        <div class="d-flex justify-content-between mt-4">
          <button type="button" class="btn btn-secondary prev-btn">Anterior</button>
          <button type="button" class="btn btn-success next-btn">Siguiente</button>
        </div>
      </div>

      <!-- Paso 3: Confirmar Envío -->
      <div class="form-step">
        <h2 class="text-center mb-4">Confirmar Envío</h2>
        <p class="text-center">Revisa los datos antes de enviar:</p>
        <ul class="list-group mb-4">
          <li class="list-group-item"><strong>Nombres:</strong> <span id="summary-name"></span></li>
          <li class="list-group-item"><strong>Apellidos:</strong> <span id="summary-lastname"></span></li>
          <li class="list-group-item"><strong>Documento:</strong> <span id="summary-docNumber"></span></li>
          <li class="list-group-item"><strong>Teléfono:</strong> <span id="summary-Telefono"></span></li>
          <li class="list-group-item"><strong>Correo:</strong> <span id="summary-email"></span></li>
          <li class="list-group-item"><strong>Reporte:</strong> <span id="summary-report"></span></li>
        </ul>
        <div class="d-flex justify-content-between">
          <button type="button" class="btn btn-secondary prev-btn">Anterior</button>
          <button type="submit" class="btn btn-success">Enviar</button>
        </div>
      </div>
    </form>
  </div>

  <!-- Chatbot -->
  <div id="chatbot">
    <div id="chatbot-header">
      <img src="avatar.png" alt="Avatar">
      <h5>Chatbot</h5>
    </div>
    <div id="chatbot-messages"></div>
    <div id="chatbot-input">
      <input type="text" id="chatbot-input-field" placeholder="Escribe un mensaje...">
      <button id="chatbot-send-btn">Enviar</button>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const nextBtns = document.querySelectorAll('.next-btn');
      const prevBtns = document.querySelectorAll('.prev-btn');
      const formSteps = document.querySelectorAll('.form-step');
      let formStepIndex = 0;

      nextBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          formStepIndex++;
          updateFormSteps();
          updateProgressBar();
          if (formStepIndex === 2) {
            updateSummary();
          }
          handleChatbotResponse();
        });
      });

      prevBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          formStepIndex--;
          updateFormSteps();
          updateProgressBar();
          handleChatbotResponse();
        });
      });

      function updateFormSteps() {
        formSteps.forEach((formStep, index) => {
          formStep.classList.toggle('active', index === formStepIndex);
        });
      }

      function updateProgressBar() {
        const progressBar = document.getElementById('progressBar');
        progressBar.style.width = `${(formStepIndex + 1) * 33}%`;
      }

      function updateSummary() {
        document.getElementById('summary-name').textContent = document.getElementById('Nombres').value;
        document.getElementById('summary-lastname').textContent = document.getElementById('apellidos').value;
        document.getElementById('summary-docNumber').textContent = `${document.getElementById('docNumber').value} ${document.getElementById('TipoIdentificacion').value}`;
        document.getElementById('summary-Telefono').textContent = document.getElementById('Telefono').value;
        document.getElementById('summary-email').textContent = document.getElementById('email').value;
        document.getElementById('summary-report').textContent = document.getElementById('descripcion').value;
      }

      // Chatbot functionality
      const chatbot = document.getElementById('chatbot');
      const chatbotMessages = document.getElementById('chatbot-messages');
      const chatbotInputField = document.getElementById('chatbot-input-field');
      const chatbotSendBtn = document.getElementById('chatbot-send-btn');

      function addChatbotMessage(message) {
        const messageElement = document.createElement('div');
        messageElement.classList.add('chatbot-message');
        messageElement.innerHTML = `<img src="avatar.png" alt="Avatar"><div>${message}</div>`;
        chatbotMessages.appendChild(messageElement);
        chatbotMessages.scrollTop = chatbotMessages.scrollHeight;
      }

      function handleChatbotResponse() {
        if (formStepIndex === 0) {
          addChatbotMessage('Bienvenido a este espacio de reportes. Aquí podrás informarnos sobre acontecimientos relacionados a los espacios públicos de tu comunidad. Empieza por llenar los siguientes datos personales.');
          highlightField('Nombres');
        } else if (formStepIndex === 1) {
          addChatbotMessage('Por favor, completa los detalles del reporte.');
          highlightField('spaceType');
        } else if (formStepIndex === 2) {
          addChatbotMessage('Por favor, revisa y confirma tus datos.');
        }
      }

      function highlightField(fieldId) {
        const field = document.getElementById(fieldId);
        field.classList.add('highlight');
        setTimeout(() => {
          field.classList.remove('highlight');
        }, 3000);
      }

      chatbotSendBtn.addEventListener('click', () => {
        const userMessage = chatbotInputField.value;
        if (userMessage.trim()) {
          addChatbotMessage(`Tú: ${userMessage}`);
          handleChatbotResponse();
          chatbotInputField.value = '';
        }
      });

      chatbotInputField.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
          chatbotSendBtn.click();
        }
      });

      // Show chatbot
      chatbot.style.display = 'block';
      handleChatbotResponse();
    });
  </script>

  <!-- Bootstrap JS -->
  <script src="ga.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>

================================================
File: pruebas/ga.js
================================================
const steps = document.querySelectorAll(".form-step");
const progressBar = document.getElementById("progressBar");
let currentStep = 0;

// Botones "Siguiente"
document.querySelectorAll(".next-btn").forEach((btn) => {
  btn.addEventListener("click", () => {
    if (currentStep < steps.length - 1) {
      steps[currentStep].classList.remove("active");
      currentStep++;
      steps[currentStep].classList.add("active");
      updateProgressBar();
    }
  });
});

// Botones "Anterior"
document.querySelectorAll(".prev-btn").forEach((btn) => {
  btn.addEventListener("click", () => {
    if (currentStep > 0) {
      steps[currentStep].classList.remove("active");
      currentStep--;
      steps[currentStep].classList.add("active");
      updateProgressBar();
    }
  });
});

function updateProgressBar() {
  const progress = ((currentStep + 1) / steps.length) * 100;
  progressBar.style.width = `${progress}%`;
}


================================================
File: pruebas/process_report_espacio.php
================================================
<?php
require_once '../../data/db_connection.php'; // Asegúrate de que este archivo existe y tiene la conexión correcta
require_once 'send_email.php';
require_once '../../vendor/autoload.php'; // Asegúrate de que la ruta sea correcta
require_once '../../upload_image.php'; // Asegúrate de que este archivo existe y tiene la conexión correcta

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $Nombres = $_POST['Nombres'] ?? '';
    $apellidos = $_POST['apellidos'] ?? '';
    $TipoIdentificacion = $_POST['TipoIdentificacion'] ?? '';
    $idUsuario = $_POST['docNumber'] ?? ''; // Usar el número de documento como idUsuario
    $Telefono = $_POST['Telefono'] ?? '';
    $email = $_POST['email'] ?? '';
    $Direccion = $_POST['Direccion'] ?? '';
    $descripcion = $_POST['descripcion'] ?? '';
    $categoria_id = 2; // Espacios Públicos por defecto

    if (empty($Nombres) || empty($email) || empty($descripcion)) {
        die("Error: Todos los campos obligatorios deben estar llenos");
    }

    // Subir la foto
    $foto_url = null;
    if (isset($_FILES['photo']) && $_FILES['photo']['error'] == UPLOAD_ERR_OK) {
        $foto_tmp = $_FILES['photo']['tmp_name'];
        $foto_name = basename($_FILES['photo']['name']);
        $foto_dir = '../../ImgSubidas/' . $foto_name;
        if (move_uploaded_file($foto_tmp, $foto_dir)) {
            $foto_url = $foto_dir;
        }
    }

    // Insertar usuario si no existe
    $stmt = $conn->prepare("INSERT INTO usuario (idUsuario, TipoIdentificacion, Nombres, Apellidos, Telefono, Direccion, Correo) VALUES (?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE TipoIdentificacion=VALUES(TipoIdentificacion), Nombres=VALUES(Nombres), Apellidos=VALUES(Apellidos), Telefono=VALUES(Telefono), Direccion=VALUES(Direccion), Correo=VALUES(Correo)");
    $stmt->bind_param("issssss", $idUsuario, $TipoIdentificacion, $Nombres, $apellidos, $Telefono, $Direccion, $email);
    if (!$stmt->execute()) {
        echo "Error al insertar el usuario: " . $stmt->error;
        $stmt->close();
        $conn->close();
        exit();
    }
    $stmt->close();

    // Verificar si el usuario se insertó correctamente
    $stmt = $conn->prepare("SELECT idUsuario FROM usuario WHERE idUsuario = ?");
    $stmt->bind_param("i", $idUsuario);
    $stmt->execute();
    $stmt->store_result();

    if ($stmt->num_rows > 0) {
        // Insertar reporte
        $stmt = $conn->prepare("INSERT INTO reportes (usuario_id, categoria_id, descripcion, Direccion, foto_url) VALUES (?, ?, ?, ?, ?)");
        $stmt->bind_param("iisss", $idUsuario, $categoria_id, $descripcion, $Direccion, $foto_url);

        if ($stmt->execute()) {
            // Crear el cuerpo del correo con todos los datos del reporte
            $message = "
                <h2>Nuevo Reporte de Espacios Públicos</h2>
                <p><strong>Nombres:</strong> $Nombres</p>
                <p><strong>Apellidos:</strong> $apellidos</p>
                <p><strong>Tipo de Documento:</strong> $TipoIdentificacion</p>
                <p><strong>Número de Documento:</strong> $idUsuario</p>
                <p><strong>Email:</strong> $email</p>
                <p><strong>Teléfono:</strong> $Telefono</p>
                <p><strong>Dirección:</strong> $Direccion</p>
                <p><strong>Descripción:</strong> $descripcion</p>
                <p><strong>Foto URL:</strong> $foto_url</p>
            ";

            // Enviar correos
            send_email("alumbradopublico@muninuevochimbote.gob.pe", "Nuevo reporte de incidencias en el espacio público", $message);
            echo "Reporte enviado exitosamente.";
        } else {
            echo "Error al guardar el reporte: " . $stmt->error;
        }
        $stmt->close();
    } else {
        echo "Error: No se pudo encontrar el usuario.";
        $stmt->close();
    }
    $conn->close();
} else {
    echo "Método no permitido.";
}
?>

================================================
File: pruebas/send_email.php
================================================
<?php
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

require '../../vendor/autoload.php'; // Asegúrate de que la ruta sea correcta

if (!function_exists('send_email')) {
    // Esta función envía un correo electrónico de confirmación después de recibir un reporte
    function send_email($to, $subject, $message)
    {
        $mail = new PHPMailer(true);

        try {
            // Configuración del servidor SMTP
            $mail->isSMTP();
            $mail->Host = 'mail.muninuevochimbote.gob.pe'; // Servidor SMTP
            $mail->SMTPAuth = true;
            $mail->Username = 'alumbradopublico@muninuevochimbote.gob.pe'; // Correo de autenticación
            $mail->Password = 'MDNCH*2025'; // Contraseña
            $mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS; // Usar SSL
            $mail->Port = 465; // Puerto SMTP con SSL

            // Configuración del correo
            $mail->setFrom('alumbradopublico@muninuevochimbote.gob.pe', 'Daños en espacios públicos');
            $mail->addAddress("alumbradopublico@muninuevochimbote.gob.pe"); // Correo destinatario
            $mail->Subject = $subject;
            $mail->Body = $message;
            $mail->isHTML(true); // Establecer el formato del correo a HTML

            // Enviar el correo
            $mail->send();
            return true;
        } catch (Exception $e) {
            echo "Error al enviar el correo: {$mail->ErrorInfo}";
            return false;
        }
    }
}
?>

================================================
File: pruebas/ubicacion.js
================================================
document.getElementById("Direccion").addEventListener("input", function () {
    const query = this.value;
    if (query.length > 2) {
      fetch(
        `https://nominatim.openstreetmap.org/search?format=json&countrycodes=PE&viewbox=-78.55,-9.05,-78.45,-9.15&q=${query}`
      )
        .then((response) => response.json())
        .then((data) => {
          const suggestions = document.getElementById("suggestions");
          suggestions.innerHTML = "";
          data.forEach((item) => {
            const li = document.createElement("li");
            li.classList.add("list-group-item");
            li.textContent = item.display_name;
            li.addEventListener("click", function () {
              document.getElementById("Direccion").value = item.display_name;
              suggestions.innerHTML = "";
            });
            suggestions.appendChild(li);
          });
        });
    }
  });

================================================
File: templates/CVVDF.php
================================================
<!DOCTYPE html>
<html lang="es">

<head>

  <link rel="stylesheet" href="../css/cartas_index.css">
  <link rel="stylesheet" href="../css/contenedorNoticia.css">
  <link rel="stylesheet" href="../css/CVVDF.css">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reportes Ciudadanos</title>

</head>

<body>
  <?php include '../incluides/header.php'; ?>

  <!-- Contenedor de fondo -->
  <div class="background-image"></div>

  <!-- Contenido Principal -->
  <div class="content container">
    <h1 style="text-align: center;">Yo participo</h1>
    <div class="noticia">
      <img src="../images/gentita.jpg" alt="Imagen de la Noticia">
      <h2>#YoApoyo: Alcalde invita a ciudadanía a trabajar por Nuevo Chimbote</h2>
      <p>El alcalde Walter Soto invita a la ciudadanía a trabajar con el Distrito, con acciones cotidianas.
      </p>
    </div>
    <section class="yo-participo-section">
      <div class="highlight"></div>
      <div class="contentm">
        <h1>Conoce "Yo Participo", espacio de participación ciudadana en Nuevo Chimbote</h1>
        <p>Yo participo es un espacio dedicado a la ciudadanía. Compártenos tus opiniones sobre esta hermosa ciudad.
          ¡Construye tu ciudad!</p>
      </div>
    </section>

    <div class="cuadrado">
      <div class="report-container">
        <a href="" class="menu-item">
          <div class="menu-item-titulo">
            <h2>Reporta</h2>
          </div>
          <div class="menu-item-text">
            <p>Recogeremos y atenderemos tus necesidades. Reporta huecos, fallas en alumbrado público, recolección de
              basuras
              o inconvenientes.</p>
          </div>
        </a>

        <a href="../forms/BASURA/basura.php" class="menu-item">
          <div class="menu-item-image">
            <img src="../images/basura.png" alt="Basura">
          </div>
          <div class="menu-item-text">
            <h3>Basura</h3>
            <sub>Reporta residuos en la calle.</sub>
          </div>
        </a>

        <a href="../forms/alumbrado/alumbrado.php" class="menu-item">
          <div class="menu-item-image">
            <img src="../images/alumbrado.png" alt="Alumbrado Público">
          </div>
          <div class="menu-item-text">
            <h3>Alumbrado Público</h3>
            <sub>Reporta farolas dañadas o apagadas.</sub>
          </div>
        </a>

        <a href="../forms/baches/baches.php" class="menu-item">
          <div class="menu-item-image">
            <img src="../images/baches.png" alt="Baches">
          </div>
          <div class="menu-item-text">
            <h3>Baches</h3>
            <sub>Informa sobre daños en las calles.</sub>
          </div>
        </a>

        <a href="../forms/espaciosPublicos/espacio.php" class="menu-item">
          <div class="menu-item-image">
            <img src="../images/espaciospublico.png" alt="Espacios Públicos">
          </div>
          <div class="menu-item-text">
            <h3>Espacios Públicos</h3>
            <sub>Notifica problemas en parques o plazas.</sub>
          </div>
        </a>
      </div>
    </div>

  </div>

  <!-- Botón para mostrar el chatbot con notificación -->
  <button class="chatbot-toggle" onclick="toggleChatbot()">
    <img src="../images/message-icon.png" alt="Mensaje pendiente" style="width: 24px; height: 24px;">
    <span class="notification-bubble" id="notification-bubble">1</span>
  </button>

  <!-- Chatbot -->
  <div class="chatbot-container" id="chatbot-container">
    <div class="chatbot-header">
      <h3>Chatbot</h3>
    </div>
    <div class="chatbot-messages" id="chatbot-messages">
      <div class="message bot-message">Bienvenido Nuevo Chimbotano, estoy aquí para resolver tus dudas</div>
    </div>
    <div class="chatbot-input">
      <input type="text" id="user-input" placeholder="Escribe tu mensaje...">
      <button onclick="sendMessage()">Enviar</button>
    </div>
  </div>

  <style>
    /* Botón flotante para abrir el chat */
    .chatbot-toggle {
      position: fixed;
      bottom: 20px;
      right: 180px;
      /* Se mantiene a la izquierda */
      padding: 10px;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 50%;
      cursor: pointer;
      z-index: 9999;
      /* Aumentado para que siempre esté por encima */
      display: flex;
      align-items: center;
      justify-content: center;
      width: 50px;
      height: 50px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    /* Burbuja de notificación */
    .notification-bubble {
      position: absolute;
      top: 2px;
      /* Ajustado para que no se vea desplazado */
      right: 2px;
      /* Ajustado para mejor alineación */
      background-color: red;
      color: white;
      font-size: 12px;
      font-weight: bold;
      padding: 4px 8px;
      border-radius: 50%;
      display: none;
      animation: pulse 1.5s infinite;
    }

    /* Animación de la burbuja */
    @keyframes pulse {
      0% {
        transform: scale(1);
        opacity: 1;
      }

      50% {
        transform: scale(1.2);
        opacity: 0.8;
      }

      100% {
        transform: scale(1);
        opacity: 1;
      }
    }

    /* Contenedor del chatbot */
    .chatbot-container {
      display: none;
      position: fixed;
      bottom: 80px;
      /* Ajustado para evitar solapamiento con el botón */
      right: 180px;
      width: 260px;
      border: 1px solid #ccc;
      background-color: #fff;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      z-index: 9998;
      /* Debe estar por debajo del botón */
    }

    /* Estilo para todos los h1 */
    h1 {
      color: #0056b3;
      /* Cambia el color de todos los h1 a #0056b3 */
    }
  </style>

  <script>
    function toggleChatbot() {
      const chatbotContainer = document.getElementById('chatbot-container');
      const notificationBubble = document.getElementById('notification-bubble');

      if (chatbotContainer.style.display === 'none' || chatbotContainer.style.display === '') {
        chatbotContainer.style.display = 'block';
        notificationBubble.style.display = 'none'; // Oculta la notificación cuando se abre el chat
      } else {
        chatbotContainer.style.display = 'none';
      }
    }

    function sendMessage() {
      const userInput = document.getElementById('user-input');
      const message = userInput.value.trim();
      if (message) {
        const messagesContainer = document.getElementById('chatbot-messages');
        const userMessage = document.createElement('div');
        userMessage.className = 'message user-message';
        userMessage.textContent = message;
        messagesContainer.appendChild(userMessage);
        userInput.value = '';

        setTimeout(() => {
          const botMessage = document.createElement('div');
          botMessage.className = 'message bot-message';
          botMessage.textContent = 'Gracias por tu mensaje. Estamos aquí para ayudarte.';
          messagesContainer.appendChild(botMessage);
          messagesContainer.scrollTop = messagesContainer.scrollHeight;

          // Muestra la notificación cuando llega un nuevo mensaje
          document.getElementById('notification-bubble').style.display = 'block';

        }, 1000);
      }
    }
  </script>

</body>

</html>

================================================
File: vendor/autoload.php
================================================
<?php

// autoload.php @generated by Composer

if (PHP_VERSION_ID < 50600) {
    if (!headers_sent()) {
        header('HTTP/1.1 500 Internal Server Error');
    }
    $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running '.PHP_VERSION.', please upgrade PHP or use Composer 2.2 LTS via "composer self-update --2.2". Aborting.'.PHP_EOL;
    if (!ini_get('display_errors')) {
        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {
            fwrite(STDERR, $err);
        } elseif (!headers_sent()) {
            echo $err;
        }
    }
    trigger_error(
        $err,
        E_USER_ERROR
    );
}

require_once __DIR__ . '/composer/autoload_real.php';

return ComposerAutoloaderInit2185d2f99bcd56787481d9357a5972d3::getLoader();


================================================
File: vendor/composer/ClassLoader.php
================================================
<?php

/*
 * This file is part of Composer.
 *
 * (c) Nils Adermann <naderman@naderman.de>
 *     Jordi Boggiano <j.boggiano@seld.be>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Composer\Autoload;

/**
 * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.
 *
 *     $loader = new \Composer\Autoload\ClassLoader();
 *
 *     // register classes with namespaces
 *     $loader->add('Symfony\Component', __DIR__.'/component');
 *     $loader->add('Symfony',           __DIR__.'/framework');
 *
 *     // activate the autoloader
 *     $loader->register();
 *
 *     // to enable searching the include path (eg. for PEAR packages)
 *     $loader->setUseIncludePath(true);
 *
 * In this example, if you try to use a class in the Symfony\Component
 * namespace or one of its children (Symfony\Component\Console for instance),
 * the autoloader will first look for the class under the component/
 * directory, and it will then fallback to the framework/ directory if not
 * found before giving up.
 *
 * This class is loosely based on the Symfony UniversalClassLoader.
 *
 * @author Fabien Potencier <fabien@symfony.com>
 * @author Jordi Boggiano <j.boggiano@seld.be>
 * @see    https://www.php-fig.org/psr/psr-0/
 * @see    https://www.php-fig.org/psr/psr-4/
 */
class ClassLoader
{
    /** @var \Closure(string):void */
    private static $includeFile;

    /** @var string|null */
    private $vendorDir;

    // PSR-4
    /**
     * @var array<string, array<string, int>>
     */
    private $prefixLengthsPsr4 = array();
    /**
     * @var array<string, list<string>>
     */
    private $prefixDirsPsr4 = array();
    /**
     * @var list<string>
     */
    private $fallbackDirsPsr4 = array();

    // PSR-0
    /**
     * List of PSR-0 prefixes
     *
     * Structured as array('F (first letter)' => array('Foo\Bar (full prefix)' => array('path', 'path2')))
     *
     * @var array<string, array<string, list<string>>>
     */
    private $prefixesPsr0 = array();
    /**
     * @var list<string>
     */
    private $fallbackDirsPsr0 = array();

    /** @var bool */
    private $useIncludePath = false;

    /**
     * @var array<string, string>
     */
    private $classMap = array();

    /** @var bool */
    private $classMapAuthoritative = false;

    /**
     * @var array<string, bool>
     */
    private $missingClasses = array();

    /** @var string|null */
    private $apcuPrefix;

    /**
     * @var array<string, self>
     */
    private static $registeredLoaders = array();

    /**
     * @param string|null $vendorDir
     */
    public function __construct($vendorDir = null)
    {
        $this->vendorDir = $vendorDir;
        self::initializeIncludeClosure();
    }

    /**
     * @return array<string, list<string>>
     */
    public function getPrefixes()
    {
        if (!empty($this->prefixesPsr0)) {
            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));
        }

        return array();
    }

    /**
     * @return array<string, list<string>>
     */
    public function getPrefixesPsr4()
    {
        return $this->prefixDirsPsr4;
    }

    /**
     * @return list<string>
     */
    public function getFallbackDirs()
    {
        return $this->fallbackDirsPsr0;
    }

    /**
     * @return list<string>
     */
    public function getFallbackDirsPsr4()
    {
        return $this->fallbackDirsPsr4;
    }

    /**
     * @return array<string, string> Array of classname => path
     */
    public function getClassMap()
    {
        return $this->classMap;
    }

    /**
     * @param array<string, string> $classMap Class to filename map
     *
     * @return void
     */
    public function addClassMap(array $classMap)
    {
        if ($this->classMap) {
            $this->classMap = array_merge($this->classMap, $classMap);
        } else {
            $this->classMap = $classMap;
        }
    }

    /**
     * Registers a set of PSR-0 directories for a given prefix, either
     * appending or prepending to the ones previously set for this prefix.
     *
     * @param string              $prefix  The prefix
     * @param list<string>|string $paths   The PSR-0 root directories
     * @param bool                $prepend Whether to prepend the directories
     *
     * @return void
     */
    public function add($prefix, $paths, $prepend = false)
    {
        $paths = (array) $paths;
        if (!$prefix) {
            if ($prepend) {
                $this->fallbackDirsPsr0 = array_merge(
                    $paths,
                    $this->fallbackDirsPsr0
                );
            } else {
                $this->fallbackDirsPsr0 = array_merge(
                    $this->fallbackDirsPsr0,
                    $paths
                );
            }

            return;
        }

        $first = $prefix[0];
        if (!isset($this->prefixesPsr0[$first][$prefix])) {
            $this->prefixesPsr0[$first][$prefix] = $paths;

            return;
        }
        if ($prepend) {
            $this->prefixesPsr0[$first][$prefix] = array_merge(
                $paths,
                $this->prefixesPsr0[$first][$prefix]
            );
        } else {
            $this->prefixesPsr0[$first][$prefix] = array_merge(
                $this->prefixesPsr0[$first][$prefix],
                $paths
            );
        }
    }

    /**
     * Registers a set of PSR-4 directories for a given namespace, either
     * appending or prepending to the ones previously set for this namespace.
     *
     * @param string              $prefix  The prefix/namespace, with trailing '\\'
     * @param list<string>|string $paths   The PSR-4 base directories
     * @param bool                $prepend Whether to prepend the directories
     *
     * @throws \InvalidArgumentException
     *
     * @return void
     */
    public function addPsr4($prefix, $paths, $prepend = false)
    {
        $paths = (array) $paths;
        if (!$prefix) {
            // Register directories for the root namespace.
            if ($prepend) {
                $this->fallbackDirsPsr4 = array_merge(
                    $paths,
                    $this->fallbackDirsPsr4
                );
            } else {
                $this->fallbackDirsPsr4 = array_merge(
                    $this->fallbackDirsPsr4,
                    $paths
                );
            }
        } elseif (!isset($this->prefixDirsPsr4[$prefix])) {
            // Register directories for a new namespace.
            $length = strlen($prefix);
            if ('\\' !== $prefix[$length - 1]) {
                throw new \InvalidArgumentException("A non-empty PSR-4 prefix must end with a namespace separator.");
            }
            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;
            $this->prefixDirsPsr4[$prefix] = $paths;
        } elseif ($prepend) {
            // Prepend directories for an already registered namespace.
            $this->prefixDirsPsr4[$prefix] = array_merge(
                $paths,
                $this->prefixDirsPsr4[$prefix]
            );
        } else {
            // Append directories for an already registered namespace.
            $this->prefixDirsPsr4[$prefix] = array_merge(
                $this->prefixDirsPsr4[$prefix],
                $paths
            );
        }
    }

    /**
     * Registers a set of PSR-0 directories for a given prefix,
     * replacing any others previously set for this prefix.
     *
     * @param string              $prefix The prefix
     * @param list<string>|string $paths  The PSR-0 base directories
     *
     * @return void
     */
    public function set($prefix, $paths)
    {
        if (!$prefix) {
            $this->fallbackDirsPsr0 = (array) $paths;
        } else {
            $this->prefixesPsr0[$prefix[0]][$prefix] = (array) $paths;
        }
    }

    /**
     * Registers a set of PSR-4 directories for a given namespace,
     * replacing any others previously set for this namespace.
     *
     * @param string              $prefix The prefix/namespace, with trailing '\\'
     * @param list<string>|string $paths  The PSR-4 base directories
     *
     * @throws \InvalidArgumentException
     *
     * @return void
     */
    public function setPsr4($prefix, $paths)
    {
        if (!$prefix) {
            $this->fallbackDirsPsr4 = (array) $paths;
        } else {
            $length = strlen($prefix);
            if ('\\' !== $prefix[$length - 1]) {
                throw new \InvalidArgumentException("A non-empty PSR-4 prefix must end with a namespace separator.");
            }
            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;
            $this->prefixDirsPsr4[$prefix] = (array) $paths;
        }
    }

    /**
     * Turns on searching the include path for class files.
     *
     * @param bool $useIncludePath
     *
     * @return void
     */
    public function setUseIncludePath($useIncludePath)
    {
        $this->useIncludePath = $useIncludePath;
    }

    /**
     * Can be used to check if the autoloader uses the include path to check
     * for classes.
     *
     * @return bool
     */
    public function getUseIncludePath()
    {
        return $this->useIncludePath;
    }

    /**
     * Turns off searching the prefix and fallback directories for classes
     * that have not been registered with the class map.
     *
     * @param bool $classMapAuthoritative
     *
     * @return void
     */
    public function setClassMapAuthoritative($classMapAuthoritative)
    {
        $this->classMapAuthoritative = $classMapAuthoritative;
    }

    /**
     * Should class lookup fail if not found in the current class map?
     *
     * @return bool
     */
    public function isClassMapAuthoritative()
    {
        return $this->classMapAuthoritative;
    }

    /**
     * APCu prefix to use to cache found/not-found classes, if the extension is enabled.
     *
     * @param string|null $apcuPrefix
     *
     * @return void
     */
    public function setApcuPrefix($apcuPrefix)
    {
        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;
    }

    /**
     * The APCu prefix in use, or null if APCu caching is not enabled.
     *
     * @return string|null
     */
    public function getApcuPrefix()
    {
        return $this->apcuPrefix;
    }

    /**
     * Registers this instance as an autoloader.
     *
     * @param bool $prepend Whether to prepend the autoloader or not
     *
     * @return void
     */
    public function register($prepend = false)
    {
        spl_autoload_register(array($this, 'loadClass'), true, $prepend);

        if (null === $this->vendorDir) {
            return;
        }

        if ($prepend) {
            self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders;
        } else {
            unset(self::$registeredLoaders[$this->vendorDir]);
            self::$registeredLoaders[$this->vendorDir] = $this;
        }
    }

    /**
     * Unregisters this instance as an autoloader.
     *
     * @return void
     */
    public function unregister()
    {
        spl_autoload_unregister(array($this, 'loadClass'));

        if (null !== $this->vendorDir) {
            unset(self::$registeredLoaders[$this->vendorDir]);
        }
    }

    /**
     * Loads the given class or interface.
     *
     * @param  string    $class The name of the class
     * @return true|null True if loaded, null otherwise
     */
    public function loadClass($class)
    {
        if ($file = $this->findFile($class)) {
            $includeFile = self::$includeFile;
            $includeFile($file);

            return true;
        }

        return null;
    }

    /**
     * Finds the path to the file where the class is defined.
     *
     * @param string $class The name of the class
     *
     * @return string|false The path if found, false otherwise
     */
    public function findFile($class)
    {
        // class map lookup
        if (isset($this->classMap[$class])) {
            return $this->classMap[$class];
        }
        if ($this->classMapAuthoritative || isset($this->missingClasses[$class])) {
            return false;
        }
        if (null !== $this->apcuPrefix) {
            $file = apcu_fetch($this->apcuPrefix.$class, $hit);
            if ($hit) {
                return $file;
            }
        }

        $file = $this->findFileWithExtension($class, '.php');

        // Search for Hack files if we are running on HHVM
        if (false === $file && defined('HHVM_VERSION')) {
            $file = $this->findFileWithExtension($class, '.hh');
        }

        if (null !== $this->apcuPrefix) {
            apcu_add($this->apcuPrefix.$class, $file);
        }

        if (false === $file) {
            // Remember that this class does not exist.
            $this->missingClasses[$class] = true;
        }

        return $file;
    }

    /**
     * Returns the currently registered loaders keyed by their corresponding vendor directories.
     *
     * @return array<string, self>
     */
    public static function getRegisteredLoaders()
    {
        return self::$registeredLoaders;
    }

    /**
     * @param  string       $class
     * @param  string       $ext
     * @return string|false
     */
    private function findFileWithExtension($class, $ext)
    {
        // PSR-4 lookup
        $logicalPathPsr4 = strtr($class, '\\', DIRECTORY_SEPARATOR) . $ext;

        $first = $class[0];
        if (isset($this->prefixLengthsPsr4[$first])) {
            $subPath = $class;
            while (false !== $lastPos = strrpos($subPath, '\\')) {
                $subPath = substr($subPath, 0, $lastPos);
                $search = $subPath . '\\';
                if (isset($this->prefixDirsPsr4[$search])) {
                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);
                    foreach ($this->prefixDirsPsr4[$search] as $dir) {
                        if (file_exists($file = $dir . $pathEnd)) {
                            return $file;
                        }
                    }
                }
            }
        }

        // PSR-4 fallback dirs
        foreach ($this->fallbackDirsPsr4 as $dir) {
            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr4)) {
                return $file;
            }
        }

        // PSR-0 lookup
        if (false !== $pos = strrpos($class, '\\')) {
            // namespaced class name
            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)
                . strtr(substr($logicalPathPsr4, $pos + 1), '_', DIRECTORY_SEPARATOR);
        } else {
            // PEAR-like class name
            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;
        }

        if (isset($this->prefixesPsr0[$first])) {
            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {
                if (0 === strpos($class, $prefix)) {
                    foreach ($dirs as $dir) {
                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {
                            return $file;
                        }
                    }
                }
            }
        }

        // PSR-0 fallback dirs
        foreach ($this->fallbackDirsPsr0 as $dir) {
            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {
                return $file;
            }
        }

        // PSR-0 include paths.
        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {
            return $file;
        }

        return false;
    }

    /**
     * @return void
     */
    private static function initializeIncludeClosure()
    {
        if (self::$includeFile !== null) {
            return;
        }

        /**
         * Scope isolated include.
         *
         * Prevents access to $this/self from included files.
         *
         * @param  string $file
         * @return void
         */
        self::$includeFile = \Closure::bind(static function($file) {
            include $file;
        }, null, null);
    }
}


================================================
File: vendor/composer/InstalledVersions.php
================================================
<?php

/*
 * This file is part of Composer.
 *
 * (c) Nils Adermann <naderman@naderman.de>
 *     Jordi Boggiano <j.boggiano@seld.be>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Composer;

use Composer\Autoload\ClassLoader;
use Composer\Semver\VersionParser;

/**
 * This class is copied in every Composer installed project and available to all
 *
 * See also https://getcomposer.org/doc/07-runtime.md#installed-versions
 *
 * To require its presence, you can require `composer-runtime-api ^2.0`
 *
 * @final
 */
class InstalledVersions
{
    /**
     * @var mixed[]|null
     * @psalm-var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}|array{}|null
     */
    private static $installed;

    /**
     * @var bool|null
     */
    private static $canGetVendors;

    /**
     * @var array[]
     * @psalm-var array<string, array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>
     */
    private static $installedByVendor = array();

    /**
     * Returns a list of all package names which are present, either by being installed, replaced or provided
     *
     * @return string[]
     * @psalm-return list<string>
     */
    public static function getInstalledPackages()
    {
        $packages = array();
        foreach (self::getInstalled() as $installed) {
            $packages[] = array_keys($installed['versions']);
        }

        if (1 === \count($packages)) {
            return $packages[0];
        }

        return array_keys(array_flip(\call_user_func_array('array_merge', $packages)));
    }

    /**
     * Returns a list of all package names with a specific type e.g. 'library'
     *
     * @param  string   $type
     * @return string[]
     * @psalm-return list<string>
     */
    public static function getInstalledPackagesByType($type)
    {
        $packagesByType = array();

        foreach (self::getInstalled() as $installed) {
            foreach ($installed['versions'] as $name => $package) {
                if (isset($package['type']) && $package['type'] === $type) {
                    $packagesByType[] = $name;
                }
            }
        }

        return $packagesByType;
    }

    /**
     * Checks whether the given package is installed
     *
     * This also returns true if the package name is provided or replaced by another package
     *
     * @param  string $packageName
     * @param  bool   $includeDevRequirements
     * @return bool
     */
    public static function isInstalled($packageName, $includeDevRequirements = true)
    {
        foreach (self::getInstalled() as $installed) {
            if (isset($installed['versions'][$packageName])) {
                return $includeDevRequirements || !isset($installed['versions'][$packageName]['dev_requirement']) || $installed['versions'][$packageName]['dev_requirement'] === false;
            }
        }

        return false;
    }

    /**
     * Checks whether the given package satisfies a version constraint
     *
     * e.g. If you want to know whether version 2.3+ of package foo/bar is installed, you would call:
     *
     *   Composer\InstalledVersions::satisfies(new VersionParser, 'foo/bar', '^2.3')
     *
     * @param  VersionParser $parser      Install composer/semver to have access to this class and functionality
     * @param  string        $packageName
     * @param  string|null   $constraint  A version constraint to check for, if you pass one you have to make sure composer/semver is required by your package
     * @return bool
     */
    public static function satisfies(VersionParser $parser, $packageName, $constraint)
    {
        $constraint = $parser->parseConstraints((string) $constraint);
        $provided = $parser->parseConstraints(self::getVersionRanges($packageName));

        return $provided->matches($constraint);
    }

    /**
     * Returns a version constraint representing all the range(s) which are installed for a given package
     *
     * It is easier to use this via isInstalled() with the $constraint argument if you need to check
     * whether a given version of a package is installed, and not just whether it exists
     *
     * @param  string $packageName
     * @return string Version constraint usable with composer/semver
     */
    public static function getVersionRanges($packageName)
    {
        foreach (self::getInstalled() as $installed) {
            if (!isset($installed['versions'][$packageName])) {
                continue;
            }

            $ranges = array();
            if (isset($installed['versions'][$packageName]['pretty_version'])) {
                $ranges[] = $installed['versions'][$packageName]['pretty_version'];
            }
            if (array_key_exists('aliases', $installed['versions'][$packageName])) {
                $ranges = array_merge($ranges, $installed['versions'][$packageName]['aliases']);
            }
            if (array_key_exists('replaced', $installed['versions'][$packageName])) {
                $ranges = array_merge($ranges, $installed['versions'][$packageName]['replaced']);
            }
            if (array_key_exists('provided', $installed['versions'][$packageName])) {
                $ranges = array_merge($ranges, $installed['versions'][$packageName]['provided']);
            }

            return implode(' || ', $ranges);
        }

        throw new \OutOfBoundsException('Package "' . $packageName . '" is not installed');
    }

    /**
     * @param  string      $packageName
     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present
     */
    public static function getVersion($packageName)
    {
        foreach (self::getInstalled() as $installed) {
            if (!isset($installed['versions'][$packageName])) {
                continue;
            }

            if (!isset($installed['versions'][$packageName]['version'])) {
                return null;
            }

            return $installed['versions'][$packageName]['version'];
        }

        throw new \OutOfBoundsException('Package "' . $packageName . '" is not installed');
    }

    /**
     * @param  string      $packageName
     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present
     */
    public static function getPrettyVersion($packageName)
    {
        foreach (self::getInstalled() as $installed) {
            if (!isset($installed['versions'][$packageName])) {
                continue;
            }

            if (!isset($installed['versions'][$packageName]['pretty_version'])) {
                return null;
            }

            return $installed['versions'][$packageName]['pretty_version'];
        }

        throw new \OutOfBoundsException('Package "' . $packageName . '" is not installed');
    }

    /**
     * @param  string      $packageName
     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as reference
     */
    public static function getReference($packageName)
    {
        foreach (self::getInstalled() as $installed) {
            if (!isset($installed['versions'][$packageName])) {
                continue;
            }

            if (!isset($installed['versions'][$packageName]['reference'])) {
                return null;
            }

            return $installed['versions'][$packageName]['reference'];
        }

        throw new \OutOfBoundsException('Package "' . $packageName . '" is not installed');
    }

    /**
     * @param  string      $packageName
     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as install path. Packages of type metapackages also have a null install path.
     */
    public static function getInstallPath($packageName)
    {
        foreach (self::getInstalled() as $installed) {
            if (!isset($installed['versions'][$packageName])) {
                continue;
            }

            return isset($installed['versions'][$packageName]['install_path']) ? $installed['versions'][$packageName]['install_path'] : null;
        }

        throw new \OutOfBoundsException('Package "' . $packageName . '" is not installed');
    }

    /**
     * @return array
     * @psalm-return array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}
     */
    public static function getRootPackage()
    {
        $installed = self::getInstalled();

        return $installed[0]['root'];
    }

    /**
     * Returns the raw installed.php data for custom implementations
     *
     * @deprecated Use getAllRawData() instead which returns all datasets for all autoloaders present in the process. getRawData only returns the first dataset loaded, which may not be what you expect.
     * @return array[]
     * @psalm-return array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}
     */
    public static function getRawData()
    {
        @trigger_error('getRawData only returns the first dataset loaded, which may not be what you expect. Use getAllRawData() instead which returns all datasets for all autoloaders present in the process.', E_USER_DEPRECATED);

        if (null === self::$installed) {
            // only require the installed.php file if this file is loaded from its dumped location,
            // and not from its source location in the composer/composer package, see https://github.com/composer/composer/issues/9937
            if (substr(__DIR__, -8, 1) !== 'C') {
                self::$installed = include __DIR__ . '/installed.php';
            } else {
                self::$installed = array();
            }
        }

        return self::$installed;
    }

    /**
     * Returns the raw data of all installed.php which are currently loaded for custom implementations
     *
     * @return array[]
     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>
     */
    public static function getAllRawData()
    {
        return self::getInstalled();
    }

    /**
     * Lets you reload the static array from another file
     *
     * This is only useful for complex integrations in which a project needs to use
     * this class but then also needs to execute another project's autoloader in process,
     * and wants to ensure both projects have access to their version of installed.php.
     *
     * A typical case would be PHPUnit, where it would need to make sure it reads all
     * the data it needs from this class, then call reload() with
     * `require $CWD/vendor/composer/installed.php` (or similar) as input to make sure
     * the project in which it runs can then also use this class safely, without
     * interference between PHPUnit's dependencies and the project's dependencies.
     *
     * @param  array[] $data A vendor/composer/installed.php data set
     * @return void
     *
     * @psalm-param array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $data
     */
    public static function reload($data)
    {
        self::$installed = $data;
        self::$installedByVendor = array();
    }

    /**
     * @return array[]
     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>
     */
    private static function getInstalled()
    {
        if (null === self::$canGetVendors) {
            self::$canGetVendors = method_exists('Composer\Autoload\ClassLoader', 'getRegisteredLoaders');
        }

        $installed = array();

        if (self::$canGetVendors) {
            foreach (ClassLoader::getRegisteredLoaders() as $vendorDir => $loader) {
                if (isset(self::$installedByVendor[$vendorDir])) {
                    $installed[] = self::$installedByVendor[$vendorDir];
                } elseif (is_file($vendorDir.'/composer/installed.php')) {
                    /** @var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $required */
                    $required = require $vendorDir.'/composer/installed.php';
                    $installed[] = self::$installedByVendor[$vendorDir] = $required;
                    if (null === self::$installed && strtr($vendorDir.'/composer', '\\', '/') === strtr(__DIR__, '\\', '/')) {
                        self::$installed = $installed[count($installed) - 1];
                    }
                }
            }
        }

        if (null === self::$installed) {
            // only require the installed.php file if this file is loaded from its dumped location,
            // and not from its source location in the composer/composer package, see https://github.com/composer/composer/issues/9937
            if (substr(__DIR__, -8, 1) !== 'C') {
                /** @var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $required */
                $required = require __DIR__ . '/installed.php';
                self::$installed = $required;
            } else {
                self::$installed = array();
            }
        }

        if (self::$installed !== array()) {
            $installed[] = self::$installed;
        }

        return $installed;
    }
}


================================================
File: vendor/composer/LICENSE
================================================

Copyright (c) Nils Adermann, Jordi Boggiano

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is furnished
to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.



================================================
File: vendor/composer/autoload_classmap.php
================================================
<?php

// autoload_classmap.php @generated by Composer

$vendorDir = dirname(__DIR__);
$baseDir = dirname($vendorDir);

return array(
    'Composer\\InstalledVersions' => $vendorDir . '/composer/InstalledVersions.php',
);


================================================
File: vendor/composer/autoload_namespaces.php
================================================
<?php

// autoload_namespaces.php @generated by Composer

$vendorDir = dirname(__DIR__);
$baseDir = dirname($vendorDir);

return array(
);


================================================
File: vendor/composer/autoload_psr4.php
================================================
<?php

// autoload_psr4.php @generated by Composer

$vendorDir = dirname(__DIR__);
$baseDir = dirname($vendorDir);

return array(
    'PHPMailer\\PHPMailer\\' => array($vendorDir . '/phpmailer/phpmailer/src'),
);


================================================
File: vendor/composer/autoload_real.php
================================================
<?php

// autoload_real.php @generated by Composer

class ComposerAutoloaderInit2185d2f99bcd56787481d9357a5972d3
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    /**
     * @return \Composer\Autoload\ClassLoader
     */
    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

        require __DIR__ . '/platform_check.php';

        spl_autoload_register(array('ComposerAutoloaderInit2185d2f99bcd56787481d9357a5972d3', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader(\dirname(__DIR__));
        spl_autoload_unregister(array('ComposerAutoloaderInit2185d2f99bcd56787481d9357a5972d3', 'loadClassLoader'));

        require __DIR__ . '/autoload_static.php';
        call_user_func(\Composer\Autoload\ComposerStaticInit2185d2f99bcd56787481d9357a5972d3::getInitializer($loader));

        $loader->register(true);

        return $loader;
    }
}


================================================
File: vendor/composer/autoload_static.php
================================================
<?php

// autoload_static.php @generated by Composer

namespace Composer\Autoload;

class ComposerStaticInit2185d2f99bcd56787481d9357a5972d3
{
    public static $prefixLengthsPsr4 = array (
        'P' => 
        array (
            'PHPMailer\\PHPMailer\\' => 20,
        ),
    );

    public static $prefixDirsPsr4 = array (
        'PHPMailer\\PHPMailer\\' => 
        array (
            0 => __DIR__ . '/..' . '/phpmailer/phpmailer/src',
        ),
    );

    public static $classMap = array (
        'Composer\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',
    );

    public static function getInitializer(ClassLoader $loader)
    {
        return \Closure::bind(function () use ($loader) {
            $loader->prefixLengthsPsr4 = ComposerStaticInit2185d2f99bcd56787481d9357a5972d3::$prefixLengthsPsr4;
            $loader->prefixDirsPsr4 = ComposerStaticInit2185d2f99bcd56787481d9357a5972d3::$prefixDirsPsr4;
            $loader->classMap = ComposerStaticInit2185d2f99bcd56787481d9357a5972d3::$classMap;

        }, null, ClassLoader::class);
    }
}


================================================
File: vendor/composer/installed.json
================================================
{
    "packages": [
        {
            "name": "phpmailer/phpmailer",
            "version": "v6.9.3",
            "version_normalized": "6.9.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/PHPMailer/PHPMailer.git",
                "reference": "2f5c94fe7493efc213f643c23b1b1c249d40f47e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/PHPMailer/PHPMailer/zipball/2f5c94fe7493efc213f643c23b1b1c249d40f47e",
                "reference": "2f5c94fe7493efc213f643c23b1b1c249d40f47e",
                "shasum": ""
            },
            "require": {
                "ext-ctype": "*",
                "ext-filter": "*",
                "ext-hash": "*",
                "php": ">=5.5.0"
            },
            "require-dev": {
                "dealerdirect/phpcodesniffer-composer-installer": "^1.0",
                "doctrine/annotations": "^1.2.6 || ^1.13.3",
                "php-parallel-lint/php-console-highlighter": "^1.0.0",
                "php-parallel-lint/php-parallel-lint": "^1.3.2",
                "phpcompatibility/php-compatibility": "^9.3.5",
                "roave/security-advisories": "dev-latest",
                "squizlabs/php_codesniffer": "^3.7.2",
                "yoast/phpunit-polyfills": "^1.0.4"
            },
            "suggest": {
                "decomplexity/SendOauth2": "Adapter for using XOAUTH2 authentication",
                "ext-mbstring": "Needed to send email in multibyte encoding charset or decode encoded addresses",
                "ext-openssl": "Needed for secure SMTP sending and DKIM signing",
                "greew/oauth2-azure-provider": "Needed for Microsoft Azure XOAUTH2 authentication",
                "hayageek/oauth2-yahoo": "Needed for Yahoo XOAUTH2 authentication",
                "league/oauth2-google": "Needed for Google XOAUTH2 authentication",
                "psr/log": "For optional PSR-3 debug logging",
                "symfony/polyfill-mbstring": "To support UTF-8 if the Mbstring PHP extension is not enabled (^1.2)",
                "thenetworg/oauth2-azure": "Needed for Microsoft XOAUTH2 authentication"
            },
            "time": "2024-11-24T18:04:13+00:00",
            "type": "library",
            "installation-source": "source",
            "autoload": {
                "psr-4": {
                    "PHPMailer\\PHPMailer\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "LGPL-2.1-only"
            ],
            "authors": [
                {
                    "name": "Marcus Bointon",
                    "email": "phpmailer@synchromedia.co.uk"
                },
                {
                    "name": "Jim Jagielski",
                    "email": "jimjag@gmail.com"
                },
                {
                    "name": "Andy Prevost",
                    "email": "codeworxtech@users.sourceforge.net"
                },
                {
                    "name": "Brent R. Matzelle"
                }
            ],
            "description": "PHPMailer is a full-featured email creation and transfer class for PHP",
            "support": {
                "issues": "https://github.com/PHPMailer/PHPMailer/issues",
                "source": "https://github.com/PHPMailer/PHPMailer/tree/v6.9.3"
            },
            "funding": [
                {
                    "url": "https://github.com/Synchro",
                    "type": "github"
                }
            ],
            "install-path": "../phpmailer/phpmailer"
        }
    ],
    "dev": true,
    "dev-package-names": []
}


================================================
File: vendor/composer/installed.php
================================================
<?php return array(
    'root' => array(
        'name' => '__root__',
        'pretty_version' => 'dev-main',
        'version' => 'dev-main',
        'reference' => '952d5f9ba45a2e1501e756203aa02451e1ecda2a',
        'type' => 'library',
        'install_path' => __DIR__ . '/../../',
        'aliases' => array(),
        'dev' => true,
    ),
    'versions' => array(
        '__root__' => array(
            'pretty_version' => 'dev-main',
            'version' => 'dev-main',
            'reference' => '952d5f9ba45a2e1501e756203aa02451e1ecda2a',
            'type' => 'library',
            'install_path' => __DIR__ . '/../../',
            'aliases' => array(),
            'dev_requirement' => false,
        ),
        'phpmailer/phpmailer' => array(
            'pretty_version' => 'v6.9.3',
            'version' => '6.9.3.0',
            'reference' => '2f5c94fe7493efc213f643c23b1b1c249d40f47e',
            'type' => 'library',
            'install_path' => __DIR__ . '/../phpmailer/phpmailer',
            'aliases' => array(),
            'dev_requirement' => false,
        ),
    ),
);


================================================
File: vendor/composer/platform_check.php
================================================
<?php

// platform_check.php @generated by Composer

$issues = array();

if (!(PHP_VERSION_ID >= 50500)) {
    $issues[] = 'Your Composer dependencies require a PHP version ">= 5.5.0". You are running ' . PHP_VERSION . '.';
}

if ($issues) {
    if (!headers_sent()) {
        header('HTTP/1.1 500 Internal Server Error');
    }
    if (!ini_get('display_errors')) {
        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {
            fwrite(STDERR, 'Composer detected issues in your platform:' . PHP_EOL.PHP_EOL . implode(PHP_EOL, $issues) . PHP_EOL.PHP_EOL);
        } elseif (!headers_sent()) {
            echo 'Composer detected issues in your platform:' . PHP_EOL.PHP_EOL . str_replace('You are running '.PHP_VERSION.'.', '', implode(PHP_EOL, $issues)) . PHP_EOL.PHP_EOL;
        }
    }
    trigger_error(
        'Composer detected issues in your platform: ' . implode(' ', $issues),
        E_USER_ERROR
    );
}


